{"version":3,"file":"ele-table.js","sources":["../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../src/column.js","../../src/originElement.js","../../src/selection.js","../../src/table.js","../../src/tableContainer.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=[].concat(d,e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=[].concat(g,h)}else c[b][f]=a[b][f];}else if(\"hook\"===b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}}; export default mergeJsxProps;\n","const eleColumn = {\r\n    name: 'eleColumn',\r\n    functional: true,\r\n    components: { eleColumn },\r\n    render(h, context) {\r\n        const props = context.props\r\n        const globalSlots = props.globalSlots || null\r\n\r\n        function defaultRender(h, props) {\r\n            return props.render ?\r\n                { default: (prop) => props.render(h, prop) } : {}\r\n        }\r\n\r\n        return (\r\n            <el-table-column props={props} scopedSlots={defaultRender(h, props)} >\r\n                {\r\n                    props.children ?\r\n                        props.children.map(col =>\r\n                            <eleColumn props={{ ...col, globalSlots }} ></eleColumn>\r\n                        ) : null\r\n                }\r\n            </el-table-column >)\r\n    }\r\n}\r\n\r\n\r\nexport default eleColumn","export function toggleRowStatus(statusArr, row, newVal) {\r\n    let changed = false;\r\n    const index = statusArr.indexOf(row);\r\n    const included = index !== -1;\r\n\r\n    const addRow = () => {\r\n        statusArr.push(row);\r\n        changed = true;\r\n    };\r\n    const removeRow = () => {\r\n        statusArr.splice(index, 1);\r\n        changed = true;\r\n    };\r\n\r\n    if (typeof newVal === 'boolean') {\r\n        if (newVal && !included) {\r\n            addRow();\r\n        } else if (!newVal && included) {\r\n            removeRow();\r\n        }\r\n    } else {\r\n        if (included) {\r\n            removeRow();\r\n        } else {\r\n            addRow();\r\n        }\r\n    }\r\n    return changed;\r\n}\r\n\r\nexport const getKeysMap = function (array, rowKey) {\r\n    const arrayMap = {};\r\n    (array || []).forEach((row, index) => {\r\n        arrayMap[getRowIdentity(row, rowKey)] = { row, index };\r\n    });\r\n    return arrayMap;\r\n};\r\n\r\nexport const getRowIdentity = (row, rowKey) => {\r\n    if (!row) throw new Error('row is required when get row identity');\r\n    if (typeof rowKey === 'string') {\r\n        if (rowKey.indexOf('.') < 0) {\r\n            return row[rowKey];\r\n        }\r\n        let key = rowKey.split('.');\r\n        let current = row;\r\n        for (let i = 0; i < key.length; i++) {\r\n            current = current[key[i]];\r\n        }\r\n        return current;\r\n    } else if (typeof rowKey === 'function') {\r\n        return rowKey.call(null, row);\r\n    }\r\n};","import { toggleRowStatus, getKeysMap, getRowIdentity } from './originElement'\r\nexport default {\r\n    mounted() {\r\n        this.initSelection()\r\n    },\r\n    methods: {\r\n        initSelection() {\r\n            if(!this.tableRef) throw new Error('tableRef is error')\r\n            const that = this\r\n            // 全选\r\n            function _toggleAllSelection() {\r\n                const states = this.states;\r\n                const { data = [], selection } = states;\r\n                // when only some rows are selected (but not all), select or deselect all of them\r\n                // depending on the value of selectOnIndeterminate\r\n                const value = states.selectOnIndeterminate\r\n                    ? !states.isAllSelected\r\n                    : !(states.isAllSelected || selection.length);\r\n                states.isAllSelected = value;\r\n\r\n                let selectionChanged = false;\r\n                that.data.forEach((row, index) => {\r\n                    if (states.selectable) {\r\n                        if (states.selectable.call(null, row, index) && toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    } else {\r\n                        if (toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (selectionChanged) {\r\n                    this.table.$emit('selection-change', selection ? selection.slice() : []);\r\n                }\r\n                this.table.$emit('select-all', selection);\r\n            }\r\n            // 全选状态\r\n            function _updateAllSelected() {\r\n                const states = this.states;\r\n                const { selection, rowKey, selectable } = states;\r\n                // data 为 null 时，解构时的默认值会被忽略\r\n                const data = that.data || [];\r\n                if (data.length === 0) {\r\n                    states.isAllSelected = false;\r\n                    return;\r\n                }\r\n\r\n                let selectedMap;\r\n                if (rowKey) {\r\n                    selectedMap = getKeysMap(selection, rowKey);\r\n                }\r\n                const isSelected = function (row) {\r\n                    if (selectedMap) {\r\n                        return !!selectedMap[getRowIdentity(row, rowKey)];\r\n                    } else {\r\n                        return selection.indexOf(row) !== -1;\r\n                    }\r\n                };\r\n                let isAllSelected = true;\r\n                let selectedCount = 0;\r\n                for (let i = 0, j = data.length; i < j; i++) {\r\n                    const item = data[i];\r\n                    const isRowSelectable = selectable && selectable.call(null, item, i);\r\n                    if (!isSelected(item)) {\r\n                        if (!selectable || isRowSelectable) {\r\n                            isAllSelected = false;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        selectedCount++;\r\n                    }\r\n                }\r\n\r\n                if (selectedCount === 0) isAllSelected = false;\r\n                states.isAllSelected = isAllSelected;\r\n            }\r\n            this.tableRef.store.toggleAllSelection = _toggleAllSelection\r\n            this.tableRef.store.updateAllSelected = _updateAllSelected\r\n        }\r\n    }\r\n}","import eleColumn from './column'\r\nimport selection from './selection'\r\n\r\n\r\nfunction throttle(fn, time) {\r\n    let date = null\r\n    return (...arg) => {\r\n        if (date) return\r\n        date = setTimeout(() => {\r\n            fn(...arg)\r\n            date = null\r\n        }, time)\r\n    }\r\n}\r\n\r\nexport default {\r\n    name: 'eleTable',\r\n    components: { eleColumn },\r\n    mixins: [selection],\r\n    data() {\r\n        return {\r\n            item: [],\r\n            tableRef: null,\r\n            warpperRef: null,\r\n            // \r\n            elWarp: null,\r\n            elItems: null,\r\n            // \r\n            elWarpHeight: null,\r\n            itemHeight: 48,\r\n            itemHeightArr: [],\r\n            // \r\n            vCount: 7,\r\n            bufferCount: 2,\r\n            bufferHeight: 0,\r\n            startIdx: 0,\r\n            // top\r\n            selections: [],\r\n            WeakMap: new Map(),\r\n            position: [],\r\n            btn: true\r\n        }\r\n    },\r\n    props: {\r\n        data: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        },\r\n        columns: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        data(val) {\r\n            this.elWarp.style.height = this.elItems * val.length + 'px'\r\n        }\r\n    },\r\n    computed: {\r\n        vData() {\r\n            const start = this.bufferIdx\r\n            const end = this.startIdx + this.vCount + this.bufferCount\r\n\r\n            return this.data.slice(start, end)\r\n        },\r\n        bufferIdx() {\r\n            return this.startIdx - this.bufferCount > 0 ? this.startIdx - this.bufferCount : 0\r\n        },\r\n        globalHeight() {\r\n            return this.data.length * this.itemHeight\r\n        },\r\n    },\r\n    mounted() {\r\n        this.initProxy()\r\n        console.log('mounted')\r\n    },\r\n    updated() {\r\n        console.log('updated')\r\n        this.$nextTick(() => {\r\n            this.observerCB(null, true)\r\n        })\r\n\r\n\r\n    },\r\n    methods: {\r\n        initProxy() {\r\n            // wrappedRowRender\r\n            const that = this\r\n            const _orgWrappedRowRender = this.warpperRef.wrappedRowRender\r\n            this.warpperRef.wrappedRowRender = function (row, index) {\r\n                return _orgWrappedRowRender(row, index + that.bufferIdx)\r\n            }\r\n\r\n\r\n        },\r\n        refCallBack(el) {\r\n            if (this.tableRef) return\r\n            this.tableRef = el\r\n            this.tableRef.$children.forEach(vnode => {\r\n                const option = vnode.$options\r\n                if (option.name === \"ElTableBody\") this.warpperRef = vnode\r\n            })\r\n            this.tbody = this.warpperRef.$el.querySelectorAll('tbody')\r\n\r\n            this.$nextTick(() => {\r\n                this.appendWarp()\r\n                // this.observer()\r\n            })\r\n\r\n\r\n        },\r\n        appendWarp() {\r\n            const elTable = this.tableRef.$el\r\n            // \r\n            this.elWarp = document.createElement('div')\r\n            this.elWarp.className = 'ele-vertual-warp'\r\n            this.elWarp.style.height = this.globalHeight + 'px'\r\n            this.elWarp.style.position = 'relative'\r\n            // \r\n            this.elItems = document.createElement('div')\r\n            this.elItems.className = 'ele-vertual-warpItems'\r\n            this.elItems.style.position = 'absolute'\r\n            this.elItems.style.left = '0px'\r\n            this.elItems.style.top = '0px'\r\n\r\n            const elWarpper = elTable.querySelector('.el-table__body-wrapper')\r\n            const elWarpperTable = elWarpper.querySelector('table')\r\n\r\n            elWarpper.insertBefore(this.elWarp, elWarpperTable)\r\n            this.elItems.appendChild(elWarpperTable)\r\n            this.elWarp.appendChild(this.elItems)\r\n\r\n            // left\r\n            const elLeftWarpper = elTable.querySelector('.el-table__fixed .el-table__fixed-body-wrapper')\r\n            if (elLeftWarpper) {\r\n                this.leftWarp = document.createElement('div')\r\n                this.leftWarp.className = 'ele-vertual-warp-right'\r\n                this.leftWarp.style.height = this.globalHeight + 'px'\r\n                const elLeftWarrperTable = elLeftWarpper.querySelector('table')\r\n                elLeftWarpper.insertBefore(this.leftWarp, elLeftWarrperTable)\r\n                this.leftWarp.appendChild(elLeftWarrperTable)\r\n            }\r\n\r\n            // right\r\n            const elRightWarpper = elTable.querySelector('.el-table__fixed-right .el-table__fixed-body-wrapper')\r\n            if (elRightWarpper) {\r\n                this.rightWarp = document.createElement('div')\r\n                this.rightWarp.className = 'ele-vertual-warp-right'\r\n                this.rightWarp.style.height = this.globalHeight + 'px'\r\n                const elRightWarrperTable = elRightWarpper.querySelector('table')\r\n                elRightWarpper.insertBefore(this.rightWarp, elRightWarrperTable)\r\n                this.rightWarp.appendChild(elRightWarrperTable)\r\n            }\r\n\r\n\r\n\r\n\r\n            setTimeout(() => {\r\n                this.observerCB(null, true)\r\n                this.itemHeight = elWarpper.querySelector('tr').offsetHeight\r\n                console.log(elWarpper.querySelector('tr').offsetHeight, 'clientHeight', elWarpperTable.clientHeight / 13)\r\n            })\r\n\r\n            const onScroll = throttle.call(this, this.eventScroll, 10)\r\n            // scroll-event\r\n            elWarpper.addEventListener('scroll', onScroll)\r\n\r\n        },\r\n        observer() {\r\n            const table = this.elWarp.querySelector('table')\r\n            const observe = new MutationObserver(this.observerCB)\r\n            observe.observe(table, {\r\n                subtree: true,\r\n                childList: true\r\n            })\r\n        },\r\n        observerCB(mutation, init = false) {\r\n            let buffIdx = this.bufferIdx\r\n            // 初始化\r\n            if (!mutation && init) {\r\n                // const items = this.elWarp.querySelectorAll('tr')\r\n                // items.forEach(el => {\r\n                //     this.WeakMap.set(el, {\r\n                //         index: ++buffIdx,\r\n                //         ele: el,\r\n                //         rect: el.getBoundingClientRect()\r\n                //     })\r\n                // })\r\n\r\n                // \r\n                const items = this.elWarp.querySelectorAll('tr')\r\n                items.forEach(el => {\r\n                    const height = el.getBoundingClientRect().height\r\n                    const oldIdx = buffIdx - 1\r\n                    if (oldIdx >= 0) this.position[buffIdx] = {\r\n                        index: buffIdx,\r\n                        height: height,\r\n                        top: this.position[oldIdx].bottom,\r\n                        bottom: height + this.position[oldIdx].bottom\r\n                    }\r\n                    else {\r\n                        this.position[buffIdx] = {\r\n                            index: buffIdx,\r\n                            height: height,\r\n                            top: 0,\r\n                            bottom: height\r\n                        }\r\n                    }\r\n                    buffIdx++\r\n                })\r\n\r\n                console.log(this.position)\r\n            }\r\n            else {\r\n                mutation.forEach(val => {\r\n                    if (val.addedNodes.length) {\r\n                        val.addedNodes.forEach(el => {\r\n                            const height = el.getBoundingClientRect().height\r\n                            const oldIdx = buffIdx - 1\r\n                            if (oldIdx >= 0) this.position[buffIdx] = {\r\n                                index: buffIdx,\r\n                                height: height,\r\n                                top: this.position[oldIdx].bottom,\r\n                                bottom: height + this.position[oldIdx].bottom\r\n                            }\r\n                            else {\r\n                                this.position[buffIdx] = {\r\n                                    index: buffIdx,\r\n                                    height: height,\r\n                                    top: 0,\r\n                                    bottom: height\r\n                                }\r\n                            }\r\n                            buffIdx++\r\n                        })\r\n                    }\r\n\r\n                    // if (val.addedNodes.length) {\r\n                    //     val.addedNodes.forEach(el => {\r\n                    //         this.WeakMap.set(el, {\r\n                    //             index: ++buffIdx,\r\n                    //             ele: el,\r\n                    //             rect: el.getBoundingClientRect()\r\n                    //         })\r\n                    //     })\r\n\r\n                    // }\r\n                    // else if (val.removedNodes.length) {\r\n                    //     val.removedNodes.forEach(el => {\r\n                    //         // console.log(el, 'removeNodes')\r\n                    //         this.WeakMap.delete(el)\r\n                    //     })\r\n                    // }\r\n\r\n                })\r\n            }\r\n\r\n            // console.log('observe', mutation)\r\n            console.log('observe', this.position)\r\n        },\r\n        eventScroll(ev) {\r\n            const top = ev.target.scrollTop\r\n\r\n            console.log(this.position)\r\n            // part 1\r\n            // this.startIdx = Math.floor(top / this.itemHeight)\r\n            // const bufferTop = (this.startIdx - this.bufferIdx) * this.itemHeight\r\n            // const topTo = (top - top % this.itemHeight) - bufferTop\r\n\r\n            // part 2\r\n            let current = this.position.find(val => val.bottom > top && top >= val.top)\r\n            console.log(current.index, 'current', top)\r\n            this.startIdx = current.index\r\n            this.itemHeight = current.height\r\n            const bufferTop = current.top\r\n            \r\n            const topTo = (top - top % current.height)\r\n\r\n            \r\n\r\n            this.elWarp.style.height = this.globalHeight - topTo + 'px'\r\n            this.elWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n\r\n            // left\r\n            if (this.leftWarp) {\r\n                this.leftWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.leftWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n            // right\r\n            if (this.rightWarp) {\r\n                this.rightWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.rightWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n\r\n        }\r\n    },\r\n    render(h) {\r\n        const attrs = this.$attrs\r\n        return (\r\n            <el-table data={this.vData} attrs={this.$attrs} ref={this.refCallBack} on={this.$listeners}  >\r\n                {\r\n                    this.columns.map(col => {\r\n                        return <eleColumn props={{ ...col, globalSlots: this.$slots }}   >\r\n                            {/* <template slot={col.slotName}><slot name={col.slotName}></slot></template> */}\r\n\r\n                        </eleColumn>\r\n                    })\r\n                }\r\n                <template slot='append'>\r\n                    {this.$slots['append']}\r\n                </template>\r\n            </el-table>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import eleTable from './table'\r\n\r\nexport default {\r\n    name: 'eleTableContainer',\r\n    components: {\r\n        eleTable\r\n    },\r\n    data() {\r\n        return {\r\n            loading: false,\r\n        }\r\n    },\r\n    methods: {\r\n        getAxios() {\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        sizeChange(size) {\r\n            this.pProps.pageSize = size\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        currentChange(page) {\r\n            // if (this.loading) return\r\n            this.pProps.currentPage = page\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAxios()\r\n    },\r\n    computed: {\r\n        tProps() {\r\n            return this.$attrs\r\n        },\r\n        pProps() {\r\n            return this.$attrs.pageOpt\r\n        },\r\n        getData() {\r\n            return this.$attrs.getData\r\n        },\r\n    },\r\n    render(h, context) {\r\n        return (\r\n            <div class='ele-table-container'>\r\n                <ele-table props={this.tProps} v-loading={this.loading}></ele-table>\r\n                <el-pagination\r\n                    props={this.pProps}\r\n                    on={\r\n                        {\r\n                            'size-change': this.sizeChange,\r\n                            'current-change': this.currentChange\r\n                        }\r\n                    }\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** functional */\r\n    // render(h, context) {\r\n    //     console.log(_loading, '1')\r\n    //     const pProps = context.props.pageOpt\r\n    //     const tProps = context.props\r\n    //     const getData = context.props.getData\r\n\r\n    //     if(!created) {\r\n    //         getAxios()\r\n    //         created = true\r\n    //     } \r\n\r\n    //     function getAxios() {\r\n    //         _loading = true\r\n    //         setTimeout(() => {\r\n    //             getData().finally(_loading = false)\r\n    //         })\r\n    //     }\r\n\r\n    //     function sizeChange(size) {\r\n    //         pProps.pageSize = size\r\n    //         console.log('sizeChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n\r\n    //     }\r\n\r\n    //     function currentChange(page) {\r\n    //         pProps.currentPage = page\r\n    //         console.log('currentChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n    //     }\r\n\r\n\r\n\r\n    //     return (\r\n    //         <div class='ele-table-container'>\r\n    //             <ele-table props={{ ...tProps }} v-loading={_loading}></ele-table>\r\n    //             <el-pagination\r\n    //                 props={{ ...pProps }}\r\n    //                 on={\r\n    //                     {\r\n    //                         'size-change': sizeChange,\r\n    //                         'current-change': currentChange\r\n    //                     }\r\n    //                 }\r\n    //             />\r\n    //         </div >\r\n    //     )\r\n    // },\r\n}"],"names":["_extends","Object","assign","bind","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","eleColumn","name","functional","components","render","context","props","globalSlots","defaultRender","prop","_mergeJSXProps2","children","map","col","_mergeJSXProps","_objectSpread","toggleRowStatus","statusArr","row","newVal","changed","index","included","addRow","push","removeRow","splice","getKeysMap","array","rowKey","arrayMap","forEach","getRowIdentity","Error","key","split","current","mounted","initSelection","methods","tableRef","that","_toggleAllSelection","states","data","selection","value","selectOnIndeterminate","isAllSelected","selectionChanged","selectable","table","$emit","slice","_updateAllSelected","selectedMap","isSelected","selectedCount","j","item","isRowSelectable","store","toggleAllSelection","updateAllSelected","throttle","fn","time","date","arg","setTimeout","mixins","warpperRef","elWarp","elItems","elWarpHeight","itemHeight","itemHeightArr","vCount","bufferCount","bufferHeight","startIdx","selections","WeakMap","Map","position","btn","type","columns","watch","val","style","height","computed","vData","start","bufferIdx","end","globalHeight","initProxy","console","log","updated","$nextTick","observerCB","_orgWrappedRowRender","wrappedRowRender","refCallBack","el","$children","vnode","option","$options","tbody","$el","querySelectorAll","appendWarp","elTable","document","createElement","className","left","top","elWarpper","querySelector","elWarpperTable","insertBefore","appendChild","elLeftWarpper","leftWarp","elLeftWarrperTable","elRightWarpper","rightWarp","elRightWarrperTable","offsetHeight","clientHeight","onScroll","eventScroll","addEventListener","observer","observe","MutationObserver","subtree","childList","mutation","init","buffIdx","items","getBoundingClientRect","oldIdx","bottom","addedNodes","ev","target","scrollTop","find","topTo","transform","$attrs","$listeners","$slots","eleTable","loading","getAxios","getData","sizeChange","size","pProps","pageSize","currentChange","page","currentPage","tProps","pageOpt"],"mappings":"AAAa,SAASA,QAAQ,GAAE;AAAC,EAAA,OAAOA,QAAQ,GAACC,MAAM,CAACC,MAAM,GAACD,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE,GAAC,UAASC,CAAC,EAAC;IAAC,KAAI,IAAIC,CAAC,EAACC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACC,SAAS,CAACC,MAAM,EAACF,CAAC,EAAE,EAAC,KAAI,IAAIG,CAAC,IAAIJ,CAAC,GAACE,SAAS,CAACD,CAAC,CAAC,EAACD,CAAC,EAACJ,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAACI,CAAC,CAAC,KAAGL,CAAC,CAACK,CAAC,CAAC,GAACJ,CAAC,CAACI,CAAC,CAAC,CAAC,CAAA;AAAC,IAAA,OAAOL,CAAC,CAAA;GAAC,EAACJ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAACN,SAAS,CAAC,CAAA;AAAA,CAAA;AAAC,IAAIO,WAAW,GAAC,CAAC,OAAO,EAAC,OAAO,EAAC,UAAU,CAAC;AAACC,EAAAA,YAAY,GAAC,CAAC,OAAO,EAAC,OAAO,EAAC,YAAY,CAAC;AAACC,EAAAA,eAAe,GAAC,CAAC,IAAI,EAAC,UAAU,CAAC;EAACC,aAAa,GAAC,UAASb,CAAC,EAAC;IAAC,OAAOA,CAAC,CAACc,MAAM,CAAC,UAASZ,CAAC,EAACF,CAAC,EAAC;AAAC,MAAA,KAAI,IAAIC,CAAC,IAAID,CAAC,EAAC,IAAG,CAACE,CAAC,CAACD,CAAC,CAAC,EAACC,CAAC,CAACD,CAAC,CAAC,GAACD,CAAC,CAACC,CAAC,CAAC,CAAC,KAAK,IAAG,CAAC,CAAC,KAAGS,WAAW,CAACK,OAAO,CAACd,CAAC,CAAC,EAACC,CAAC,CAACD,CAAC,CAAC,GAACL,QAAQ,CAAC,EAAE,EAACM,CAAC,CAACD,CAAC,CAAC,EAACD,CAAC,CAACC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAG,CAAC,CAAC,KAAGU,YAAY,CAACI,OAAO,CAACd,CAAC,CAAC,EAAC;AAAC,QAAA,IAAII,CAAC,GAACH,CAAC,CAACD,CAAC,CAAC,YAAWe,KAAK,GAACd,CAAC,CAACD,CAAC,CAAC,GAAC,CAACC,CAAC,CAACD,CAAC,CAAC,CAAC;AAACgB,UAAAA,CAAC,GAACjB,CAAC,CAACC,CAAC,CAAC,YAAWe,KAAK,GAAChB,CAAC,CAACC,CAAC,CAAC,GAAC,CAACD,CAAC,CAACC,CAAC,CAAC,CAAC,CAAA;QAACC,CAAC,CAACD,CAAC,CAAC,GAAC,EAAE,CAACiB,MAAM,CAACb,CAAC,EAACY,CAAC,CAAC,CAAA;OAAC,MAAK,IAAG,CAAC,CAAC,KAAGL,eAAe,CAACG,OAAO,CAACd,CAAC,CAAC,EAAC;AAAC,QAAA,KAAI,IAAIkB,CAAC,IAAInB,CAAC,CAACC,CAAC,CAAC,EAAC,IAAGC,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,EAAC;AAAC,UAAA,IAAIC,CAAC,GAAClB,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,YAAWH,KAAK,GAACd,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,GAAC,CAACjB,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,CAAC;YAACE,CAAC,GAACrB,CAAC,CAACC,CAAC,CAAC,CAACkB,CAAC,CAAC,YAAWH,KAAK,GAAChB,CAAC,CAACC,CAAC,CAAC,CAACkB,CAAC,CAAC,GAAC,CAACnB,CAAC,CAACC,CAAC,CAAC,CAACkB,CAAC,CAAC,CAAC,CAAA;AAACjB,UAAAA,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,GAAC,EAAE,CAACD,MAAM,CAACE,CAAC,EAACC,CAAC,CAAC,CAAA;AAAA,SAAC,MAAKnB,CAAC,CAACD,CAAC,CAAC,CAACkB,CAAC,CAAC,GAACnB,CAAC,CAACC,CAAC,CAAC,CAACkB,CAAC,CAAC,CAAA;AAAC,OAAC,MAAK,IAAG,MAAM,KAAGlB,CAAC,EAAC,KAAI,IAAIqB,CAAC,IAAItB,CAAC,CAACC,CAAC,CAAC,EAACC,CAAC,CAACD,CAAC,CAAC,CAACqB,CAAC,CAAC,GAACpB,CAAC,CAACD,CAAC,CAAC,CAACqB,CAAC,CAAC,GAACC,OAAO,CAACrB,CAAC,CAACD,CAAC,CAAC,CAACqB,CAAC,CAAC,EAACtB,CAAC,CAACC,CAAC,CAAC,CAACqB,CAAC,CAAC,CAAC,GAACtB,CAAC,CAACC,CAAC,CAAC,CAACqB,CAAC,CAAC,CAAC,KAAKpB,CAAC,CAACD,CAAC,CAAC,GAACD,CAAC,CAACC,CAAC,CAAC,CAAA;AAAC,MAAA,OAAOC,CAAC,CAAA;KAAC,EAAC,EAAE,CAAC,CAAA;GAAC;AAACqB,EAAAA,OAAO,GAAC,UAASvB,CAAC,EAACC,CAAC,EAAC;AAAC,IAAA,OAAO,YAAU;AAACD,MAAAA,CAAC,IAAEA,CAAC,CAACS,KAAK,CAAC,IAAI,EAACN,SAAS,CAAC,EAACF,CAAC,IAAEA,CAAC,CAACQ,KAAK,CAAC,IAAI,EAACN,SAAS,CAAC,CAAA;KAAC,CAAA;GAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/jC,IAAMqB,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,WAAW;AACjBC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,UAAU,EAAE;AAAEH,IAAAA,SAAS,EAATA,SAAAA;GAAW;AACzBI,EAAAA,MAAM,EAACP,SAAAA,MAAAA,CAAAA,CAAC,EAAEQ,OAAO,EAAE;AACf,IAAA,IAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAA;AAC3B,IAAA,IAAMC,WAAW,GAAGD,KAAK,CAACC,WAAW,IAAI,IAAI,CAAA;AAE7C,IAAA,SAASC,aAAa,CAACX,CAAC,EAAES,KAAK,EAAE;MAC7B,OAAOA,KAAK,CAACF,MAAM,GACf;AAAE,QAAA,SAAA,EAAS,kBAACK,IAAI,EAAA;AAAA,UAAA,OAAKH,KAAK,CAACF,MAAM,CAACP,CAAC,EAAEY,IAAI,CAAC,CAAA;AAAA,SAAA;OAAE,GAAG,EAAE,CAAA;AACzD,KAAA;AAEA,IAAA,OAAA,CAAA,CAAA,iBAAA,EAAAC,aAAA,CAAA,CAAA,EAAA,EAAA;MAAA,OAC4BJ,EAAAA,KAAAA;AAAK,KAAA,EAAA;AAAA,MAAA,aAAA,EAAeE,aAAa,CAACX,CAAC,EAAES,KAAK,CAAA;KAE1DA,CAAAA,CAAAA,EAAAA,CAAAA,KAAK,CAACK,QAAQ,GACVL,KAAK,CAACK,QAAQ,CAACC,GAAG,CAAC,UAAAC,GAAG,EAAA;AAAA,MAAA,OAAA,CAAA,CAAA,SAAA,EAAAC,aAAA,CAAA,CAAA,EAAA,EAAA;AAAA,QAAA,OAAA,EAAAC,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKF,GAAG,CAAA,EAAA,EAAA,EAAA;AAAEN,UAAAA,WAAW,EAAXA,WAAAA;AAAW,SAAA,CAAA;AAAA,OAAA,CAAA,CAAA,CAAA,CAAA;KAAiB,CAC3D,GAAG,IAAI,CAAA,CAAA,CAAA;AAG5B,GAAA;AACJ,CAAC;;ACvBM,SAASS,eAAe,CAACC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACpD,IAAIC,OAAO,GAAG,KAAK,CAAA;AACnB,EAAA,IAAMC,KAAK,GAAGJ,SAAS,CAAC1B,OAAO,CAAC2B,GAAG,CAAC,CAAA;AACpC,EAAA,IAAMI,QAAQ,GAAGD,KAAK,KAAK,CAAC,CAAC,CAAA;AAE7B,EAAA,IAAME,MAAM,GAAG,SAATA,MAAM,GAAS;AACjBN,IAAAA,SAAS,CAACO,IAAI,CAACN,GAAG,CAAC,CAAA;AACnBE,IAAAA,OAAO,GAAG,IAAI,CAAA;GACjB,CAAA;AACD,EAAA,IAAMK,SAAS,GAAG,SAAZA,SAAS,GAAS;AACpBR,IAAAA,SAAS,CAACS,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC,CAAA;AAC1BD,IAAAA,OAAO,GAAG,IAAI,CAAA;GACjB,CAAA;AAED,EAAA,IAAI,OAAOD,MAAM,KAAK,SAAS,EAAE;AAC7B,IAAA,IAAIA,MAAM,IAAI,CAACG,QAAQ,EAAE;AACrBC,MAAAA,MAAM,EAAE,CAAA;AACZ,KAAC,MAAM,IAAI,CAACJ,MAAM,IAAIG,QAAQ,EAAE;AAC5BG,MAAAA,SAAS,EAAE,CAAA;AACf,KAAA;AACJ,GAAC,MAAM;AACH,IAAA,IAAIH,QAAQ,EAAE;AACVG,MAAAA,SAAS,EAAE,CAAA;AACf,KAAC,MAAM;AACHF,MAAAA,MAAM,EAAE,CAAA;AACZ,KAAA;AACJ,GAAA;AACA,EAAA,OAAOH,OAAO,CAAA;AAClB,CAAA;AAEO,IAAMO,UAAU,GAAG,SAAbA,UAAU,CAAaC,KAAK,EAAEC,MAAM,EAAE;EAC/C,IAAMC,QAAQ,GAAG,EAAE,CAAA;EACnB,CAACF,KAAK,IAAI,EAAE,EAAEG,OAAO,CAAC,UAACb,GAAG,EAAEG,KAAK,EAAK;IAClCS,QAAQ,CAACE,cAAc,CAACd,GAAG,EAAEW,MAAM,CAAC,CAAC,GAAG;AAAEX,MAAAA,GAAG,EAAHA,GAAG;AAAEG,MAAAA,KAAK,EAALA,KAAAA;KAAO,CAAA;AAC1D,GAAC,CAAC,CAAA;AACF,EAAA,OAAOS,QAAQ,CAAA;AACnB,CAAC,CAAA;AAEM,IAAME,cAAc,GAAG,SAAjBA,cAAc,CAAId,GAAG,EAAEW,MAAM,EAAK;EAC3C,IAAI,CAACX,GAAG,EAAE,MAAM,IAAIe,KAAK,CAAC,uCAAuC,CAAC,CAAA;AAClE,EAAA,IAAI,OAAOJ,MAAM,KAAK,QAAQ,EAAE;IAC5B,IAAIA,MAAM,CAACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACzB,OAAO2B,GAAG,CAACW,MAAM,CAAC,CAAA;AACtB,KAAA;AACA,IAAA,IAAIK,GAAG,GAAGL,MAAM,CAACM,KAAK,CAAC,GAAG,CAAC,CAAA;IAC3B,IAAIC,OAAO,GAAGlB,GAAG,CAAA;AACjB,IAAA,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,GAAG,CAACtD,MAAM,EAAEkB,CAAC,EAAE,EAAE;AACjCsC,MAAAA,OAAO,GAAGA,OAAO,CAACF,GAAG,CAACpC,CAAC,CAAC,CAAC,CAAA;AAC7B,KAAA;AACA,IAAA,OAAOsC,OAAO,CAAA;AAClB,GAAC,MAAM,IAAI,OAAOP,MAAM,KAAK,UAAU,EAAE;AACrC,IAAA,OAAOA,MAAM,CAAC7C,IAAI,CAAC,IAAI,EAAEkC,GAAG,CAAC,CAAA;AACjC,GAAA;AACJ,CAAC;;ACpDD,gBAAe;AACXmB,EAAAA,OAAO,EAAG,SAAA,OAAA,GAAA;IACN,IAAI,CAACC,aAAa,EAAE,CAAA;GACvB;AACDC,EAAAA,OAAO,EAAE;AACLD,IAAAA,aAAa,EAAG,SAAA,aAAA,GAAA;MACZ,IAAG,CAAC,IAAI,CAACE,QAAQ,EAAE,MAAM,IAAIP,KAAK,CAAC,mBAAmB,CAAC,CAAA;MACvD,IAAMQ,IAAI,GAAG,IAAI,CAAA;AACjB;AACA,MAAA,SAASC,mBAAmB,GAAG;AAC3B,QAAA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAA;QACOA,MAAM,CAA/BC,IAAI,CAAA;AAAJA,cAAWC,SAAS,GAAKF,MAAM,CAApBE,UAAS;AAC5B;AACA;AACA,QAAA,IAAMC,KAAK,GAAGH,MAAM,CAACI,qBAAqB,GACpC,CAACJ,MAAM,CAACK,aAAa,GACrB,EAAEL,MAAM,CAACK,aAAa,IAAIH,SAAS,CAACjE,MAAM,CAAC,CAAA;QACjD+D,MAAM,CAACK,aAAa,GAAGF,KAAK,CAAA;QAE5B,IAAIG,gBAAgB,GAAG,KAAK,CAAA;QAC5BR,IAAI,CAACG,IAAI,CAACb,OAAO,CAAC,UAACb,GAAG,EAAEG,KAAK,EAAK;UAC9B,IAAIsB,MAAM,CAACO,UAAU,EAAE;YACnB,IAAIP,MAAM,CAACO,UAAU,CAAClE,IAAI,CAAC,IAAI,EAAEkC,GAAG,EAAEG,KAAK,CAAC,IAAIL,eAAe,CAAC6B,SAAS,EAAE3B,GAAG,EAAE4B,KAAK,CAAC,EAAE;AACpFG,cAAAA,gBAAgB,GAAG,IAAI,CAAA;AAC3B,aAAA;AACJ,WAAC,MAAM;YACH,IAAIjC,eAAe,CAAC6B,SAAS,EAAE3B,GAAG,EAAE4B,KAAK,CAAC,EAAE;AACxCG,cAAAA,gBAAgB,GAAG,IAAI,CAAA;AAC3B,aAAA;AACJ,WAAA;AACJ,SAAC,CAAC,CAAA;AAEF,QAAA,IAAIA,gBAAgB,EAAE;AAClB,UAAA,IAAI,CAACE,KAAK,CAACC,KAAK,CAAC,kBAAkB,EAAEP,SAAS,GAAGA,SAAS,CAACQ,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;AAC5E,SAAA;QACA,IAAI,CAACF,KAAK,CAACC,KAAK,CAAC,YAAY,EAAEP,SAAS,CAAC,CAAA;AAC7C,OAAA;AACA;AACA,MAAA,SAASS,kBAAkB,GAAG;AAC1B,QAAA,IAAMX,MAAM,GAAG,IAAI,CAACA,MAAM,CAAA;AAC1B,QAAA,IAAQE,SAAS,GAAyBF,MAAM,CAAxCE,SAAS;UAAEhB,MAAM,GAAiBc,MAAM,CAA7Bd,MAAM;UAAEqB,UAAU,GAAKP,MAAM,CAArBO,UAAU,CAAA;AACrC;AACA,QAAA,IAAMN,IAAI,GAAGH,IAAI,CAACG,IAAI,IAAI,EAAE,CAAA;AAC5B,QAAA,IAAIA,IAAI,CAAChE,MAAM,KAAK,CAAC,EAAE;UACnB+D,MAAM,CAACK,aAAa,GAAG,KAAK,CAAA;AAC5B,UAAA,OAAA;AACJ,SAAA;AAEA,QAAA,IAAIO,WAAW,CAAA;AACf,QAAA,IAAI1B,MAAM,EAAE;AACR0B,UAAAA,WAAW,GAAG5B,UAAU,CAACkB,SAAS,EAAEhB,MAAM,CAAC,CAAA;AAC/C,SAAA;AACA,QAAA,IAAM2B,UAAU,GAAG,SAAbA,UAAU,CAAatC,GAAG,EAAE;AAC9B,UAAA,IAAIqC,WAAW,EAAE;YACb,OAAO,CAAC,CAACA,WAAW,CAACvB,cAAc,CAACd,GAAG,EAAEW,MAAM,CAAC,CAAC,CAAA;AACrD,WAAC,MAAM;YACH,OAAOgB,SAAS,CAACtD,OAAO,CAAC2B,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;AACxC,WAAA;SACH,CAAA;QACD,IAAI8B,aAAa,GAAG,IAAI,CAAA;QACxB,IAAIS,aAAa,GAAG,CAAC,CAAA;AACrB,QAAA,KAAK,IAAI3D,CAAC,GAAG,CAAC,EAAE4D,CAAC,GAAGd,IAAI,CAAChE,MAAM,EAAEkB,CAAC,GAAG4D,CAAC,EAAE5D,CAAC,EAAE,EAAE;AACzC,UAAA,IAAM6D,IAAI,GAAGf,IAAI,CAAC9C,CAAC,CAAC,CAAA;AACpB,UAAA,IAAM8D,eAAe,GAAGV,UAAU,IAAIA,UAAU,CAAClE,IAAI,CAAC,IAAI,EAAE2E,IAAI,EAAE7D,CAAC,CAAC,CAAA;AACpE,UAAA,IAAI,CAAC0D,UAAU,CAACG,IAAI,CAAC,EAAE;AACnB,YAAA,IAAI,CAACT,UAAU,IAAIU,eAAe,EAAE;AAChCZ,cAAAA,aAAa,GAAG,KAAK,CAAA;AACrB,cAAA,MAAA;AACJ,aAAA;AACJ,WAAC,MAAM;AACHS,YAAAA,aAAa,EAAE,CAAA;AACnB,WAAA;AACJ,SAAA;AAEA,QAAA,IAAIA,aAAa,KAAK,CAAC,EAAET,aAAa,GAAG,KAAK,CAAA;QAC9CL,MAAM,CAACK,aAAa,GAAGA,aAAa,CAAA;AACxC,OAAA;AACA,MAAA,IAAI,CAACR,QAAQ,CAACqB,KAAK,CAACC,kBAAkB,GAAGpB,mBAAmB,CAAA;AAC5D,MAAA,IAAI,CAACF,QAAQ,CAACqB,KAAK,CAACE,iBAAiB,GAAGT,kBAAkB,CAAA;AAC9D,KAAA;AACJ,GAAA;AACJ,CAAC;;AC9ED,SAASU,QAAQ,CAACC,EAAE,EAAEC,IAAI,EAAE;EACxB,IAAIC,IAAI,GAAG,IAAI,CAAA;AACf,EAAA,OAAO,YAAY;AAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAARC,GAAG,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAHA,GAAG,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,KAAA;AACV,IAAA,IAAID,IAAI,EAAE,OAAA;IACVA,IAAI,GAAGE,UAAU,CAAC,YAAM;MACpBJ,EAAE,CAAA,KAAA,CAAA,KAAA,CAAA,EAAIG,GAAG,CAAC,CAAA;AACVD,MAAAA,IAAI,GAAG,IAAI,CAAA;KACd,EAAED,IAAI,CAAC,CAAA;GACX,CAAA;AACL,CAAA;AAEA,eAAe;AACXjE,EAAAA,IAAI,EAAE,UAAU;AAChBE,EAAAA,UAAU,EAAE;AAAEH,IAAAA,SAAS,EAATA,SAAAA;GAAW;EACzBsE,MAAM,EAAE,CAACzB,SAAS,CAAC;AACnBD,EAAAA,IAAI,EAAG,SAAA,IAAA,GAAA;IACH,OAAO;AACHe,MAAAA,IAAI,EAAE,EAAE;AACRnB,MAAAA,QAAQ,EAAE,IAAI;AACd+B,MAAAA,UAAU,EAAE,IAAI;AAChB;AACAC,MAAAA,MAAM,EAAE,IAAI;AACZC,MAAAA,OAAO,EAAE,IAAI;AACb;AACAC,MAAAA,YAAY,EAAE,IAAI;AAClBC,MAAAA,UAAU,EAAE,EAAE;AACdC,MAAAA,aAAa,EAAE,EAAE;AACjB;AACAC,MAAAA,MAAM,EAAE,CAAC;AACTC,MAAAA,WAAW,EAAE,CAAC;AACdC,MAAAA,YAAY,EAAE,CAAC;AACfC,MAAAA,QAAQ,EAAE,CAAC;AACX;AACAC,MAAAA,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,IAAIC,GAAG,EAAE;AAClBC,MAAAA,QAAQ,EAAE,EAAE;AACZC,MAAAA,GAAG,EAAE,IAAA;KACR,CAAA;GACJ;AACD/E,EAAAA,KAAK,EAAE;AACHsC,IAAAA,IAAI,EAAE;AACF0C,MAAAA,IAAI,EAAE9F,KAAK;MAAA,SACD,EAAA,SAAA,QAAA,GAAA;AACN,QAAA,OAAO,EAAE,CAAA;AACb,OAAA;KACH;AACD+F,IAAAA,OAAO,EAAE;AACLD,MAAAA,IAAI,EAAE9F,KAAK;MAAA,SACD,EAAA,SAAA,QAAA,GAAA;AACN,QAAA,OAAO,EAAE,CAAA;AACb,OAAA;AACJ,KAAA;GACH;AACDgG,EAAAA,KAAK,EAAE;IACH5C,IAAI,EAAA,SAAA,IAAA,CAAC6C,GAAG,EAAE;AACN,MAAA,IAAI,CAACjB,MAAM,CAACkB,KAAK,CAACC,MAAM,GAAG,IAAI,CAAClB,OAAO,GAAGgB,GAAG,CAAC7G,MAAM,GAAG,IAAI,CAAA;AAC/D,KAAA;GACH;AACDgH,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAG,SAAA,KAAA,GAAA;AACJ,MAAA,IAAMC,KAAK,GAAG,IAAI,CAACC,SAAS,CAAA;AAC5B,MAAA,IAAMC,GAAG,GAAG,IAAI,CAAChB,QAAQ,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI,CAACC,WAAW,CAAA;MAE1D,OAAO,IAAI,CAAClC,IAAI,CAACS,KAAK,CAACyC,KAAK,EAAEE,GAAG,CAAC,CAAA;KACrC;AACDD,IAAAA,SAAS,EAAG,SAAA,SAAA,GAAA;AACR,MAAA,OAAO,IAAI,CAACf,QAAQ,GAAG,IAAI,CAACF,WAAW,GAAG,CAAC,GAAG,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACF,WAAW,GAAG,CAAC,CAAA;KACrF;AACDmB,IAAAA,YAAY,EAAG,SAAA,YAAA,GAAA;MACX,OAAO,IAAI,CAACrD,IAAI,CAAChE,MAAM,GAAG,IAAI,CAAC+F,UAAU,CAAA;AAC7C,KAAA;GACH;AACDtC,EAAAA,OAAO,EAAG,SAAA,OAAA,GAAA;IACN,IAAI,CAAC6D,SAAS,EAAE,CAAA;AAChBC,IAAAA,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAAA;GACzB;AACDC,EAAAA,OAAO,EAAG,SAAA,OAAA,GAAA;AAAA,IAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AACNF,IAAAA,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAAA;IACtB,IAAI,CAACE,SAAS,CAAC,YAAM;AACjB,MAAA,KAAI,CAACC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAC/B,KAAC,CAAC,CAAA;GAGL;AACDhE,EAAAA,OAAO,EAAE;AACL2D,IAAAA,SAAS,EAAG,SAAA,SAAA,GAAA;AACR;MACA,IAAMzD,IAAI,GAAG,IAAI,CAAA;AACjB,MAAA,IAAM+D,oBAAoB,GAAG,IAAI,CAACjC,UAAU,CAACkC,gBAAgB,CAAA;MAC7D,IAAI,CAAClC,UAAU,CAACkC,gBAAgB,GAAG,UAAUvF,GAAG,EAAEG,KAAK,EAAE;QACrD,OAAOmF,oBAAoB,CAACtF,GAAG,EAAEG,KAAK,GAAGoB,IAAI,CAACsD,SAAS,CAAC,CAAA;OAC3D,CAAA;KAGJ;IACDW,WAAW,EAAA,SAAA,WAAA,CAACC,EAAE,EAAE;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;MACZ,IAAI,IAAI,CAACnE,QAAQ,EAAE,OAAA;MACnB,IAAI,CAACA,QAAQ,GAAGmE,EAAE,CAAA;MAClB,IAAI,CAACnE,QAAQ,CAACoE,SAAS,CAAC7E,OAAO,CAAC,UAAA8E,KAAK,EAAI;AACrC,QAAA,IAAMC,MAAM,GAAGD,KAAK,CAACE,QAAQ,CAAA;QAC7B,IAAID,MAAM,CAAC7G,IAAI,KAAK,aAAa,EAAE,MAAI,CAACsE,UAAU,GAAGsC,KAAK,CAAA;AAC9D,OAAC,CAAC,CAAA;AACF,MAAA,IAAI,CAACG,KAAK,GAAG,IAAI,CAACzC,UAAU,CAAC0C,GAAG,CAACC,gBAAgB,CAAC,OAAO,CAAC,CAAA;MAE1D,IAAI,CAACZ,SAAS,CAAC,YAAM;QACjB,MAAI,CAACa,UAAU,EAAE,CAAA;AACjB;AACJ,OAAC,CAAC,CAAA;KAGL;AACDA,IAAAA,UAAU,EAAG,SAAA,UAAA,GAAA;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AACT,MAAA,IAAMC,OAAO,GAAG,IAAI,CAAC5E,QAAQ,CAACyE,GAAG,CAAA;AACjC;MACA,IAAI,CAACzC,MAAM,GAAG6C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AAC3C,MAAA,IAAI,CAAC9C,MAAM,CAAC+C,SAAS,GAAG,kBAAkB,CAAA;MAC1C,IAAI,CAAC/C,MAAM,CAACkB,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG,IAAI,CAAA;AACnD,MAAA,IAAI,CAACzB,MAAM,CAACkB,KAAK,CAACN,QAAQ,GAAG,UAAU,CAAA;AACvC;MACA,IAAI,CAACX,OAAO,GAAG4C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AAC5C,MAAA,IAAI,CAAC7C,OAAO,CAAC8C,SAAS,GAAG,uBAAuB,CAAA;AAChD,MAAA,IAAI,CAAC9C,OAAO,CAACiB,KAAK,CAACN,QAAQ,GAAG,UAAU,CAAA;AACxC,MAAA,IAAI,CAACX,OAAO,CAACiB,KAAK,CAAC8B,IAAI,GAAG,KAAK,CAAA;AAC/B,MAAA,IAAI,CAAC/C,OAAO,CAACiB,KAAK,CAAC+B,GAAG,GAAG,KAAK,CAAA;AAE9B,MAAA,IAAMC,SAAS,GAAGN,OAAO,CAACO,aAAa,CAAC,yBAAyB,CAAC,CAAA;AAClE,MAAA,IAAMC,cAAc,GAAGF,SAAS,CAACC,aAAa,CAAC,OAAO,CAAC,CAAA;MAEvDD,SAAS,CAACG,YAAY,CAAC,IAAI,CAACrD,MAAM,EAAEoD,cAAc,CAAC,CAAA;AACnD,MAAA,IAAI,CAACnD,OAAO,CAACqD,WAAW,CAACF,cAAc,CAAC,CAAA;MACxC,IAAI,CAACpD,MAAM,CAACsD,WAAW,CAAC,IAAI,CAACrD,OAAO,CAAC,CAAA;;AAErC;AACA,MAAA,IAAMsD,aAAa,GAAGX,OAAO,CAACO,aAAa,CAAC,gDAAgD,CAAC,CAAA;AAC7F,MAAA,IAAII,aAAa,EAAE;QACf,IAAI,CAACC,QAAQ,GAAGX,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AAC7C,QAAA,IAAI,CAACU,QAAQ,CAACT,SAAS,GAAG,wBAAwB,CAAA;QAClD,IAAI,CAACS,QAAQ,CAACtC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG,IAAI,CAAA;AACrD,QAAA,IAAMgC,kBAAkB,GAAGF,aAAa,CAACJ,aAAa,CAAC,OAAO,CAAC,CAAA;QAC/DI,aAAa,CAACF,YAAY,CAAC,IAAI,CAACG,QAAQ,EAAEC,kBAAkB,CAAC,CAAA;AAC7D,QAAA,IAAI,CAACD,QAAQ,CAACF,WAAW,CAACG,kBAAkB,CAAC,CAAA;AACjD,OAAA;;AAEA;AACA,MAAA,IAAMC,cAAc,GAAGd,OAAO,CAACO,aAAa,CAAC,sDAAsD,CAAC,CAAA;AACpG,MAAA,IAAIO,cAAc,EAAE;QAChB,IAAI,CAACC,SAAS,GAAGd,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AAC9C,QAAA,IAAI,CAACa,SAAS,CAACZ,SAAS,GAAG,wBAAwB,CAAA;QACnD,IAAI,CAACY,SAAS,CAACzC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG,IAAI,CAAA;AACtD,QAAA,IAAMmC,mBAAmB,GAAGF,cAAc,CAACP,aAAa,CAAC,OAAO,CAAC,CAAA;QACjEO,cAAc,CAACL,YAAY,CAAC,IAAI,CAACM,SAAS,EAAEC,mBAAmB,CAAC,CAAA;AAChE,QAAA,IAAI,CAACD,SAAS,CAACL,WAAW,CAACM,mBAAmB,CAAC,CAAA;AACnD,OAAA;AAKA/D,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACkC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAC3B,MAAI,CAAC5B,UAAU,GAAG+C,SAAS,CAACC,aAAa,CAAC,IAAI,CAAC,CAACU,YAAY,CAAA;AAC5DlC,QAAAA,OAAO,CAACC,GAAG,CAACsB,SAAS,CAACC,aAAa,CAAC,IAAI,CAAC,CAACU,YAAY,EAAE,cAAc,EAAET,cAAc,CAACU,YAAY,GAAG,EAAE,CAAC,CAAA;AAC7G,OAAC,CAAC,CAAA;AAEF,MAAA,IAAMC,QAAQ,GAAGvE,QAAQ,CAAChF,IAAI,CAAC,IAAI,EAAE,IAAI,CAACwJ,WAAW,EAAE,EAAE,CAAC,CAAA;AAC1D;AACAd,MAAAA,SAAS,CAACe,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC,CAAA;KAEjD;AACDG,IAAAA,QAAQ,EAAG,SAAA,QAAA,GAAA;MACP,IAAMvF,KAAK,GAAG,IAAI,CAACqB,MAAM,CAACmD,aAAa,CAAC,OAAO,CAAC,CAAA;MAChD,IAAMgB,OAAO,GAAG,IAAIC,gBAAgB,CAAC,IAAI,CAACrC,UAAU,CAAC,CAAA;AACrDoC,MAAAA,OAAO,CAACA,OAAO,CAACxF,KAAK,EAAE;AACnB0F,QAAAA,OAAO,EAAE,IAAI;AACbC,QAAAA,SAAS,EAAE,IAAA;AACf,OAAC,CAAC,CAAA;KACL;IACDvC,UAAU,EAAA,SAAA,UAAA,CAACwC,QAAQ,EAAgB;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;MAAA,IAAdC,IAAI,uEAAG,KAAK,CAAA;AAC7B,MAAA,IAAIC,OAAO,GAAG,IAAI,CAAClD,SAAS,CAAA;AAC5B;AACA,MAAA,IAAI,CAACgD,QAAQ,IAAIC,IAAI,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;QACA,IAAME,KAAK,GAAG,IAAI,CAAC1E,MAAM,CAAC0C,gBAAgB,CAAC,IAAI,CAAC,CAAA;AAChDgC,QAAAA,KAAK,CAACnH,OAAO,CAAC,UAAA4E,EAAE,EAAI;AAChB,UAAA,IAAMhB,MAAM,GAAGgB,EAAE,CAACwC,qBAAqB,EAAE,CAACxD,MAAM,CAAA;AAChD,UAAA,IAAMyD,MAAM,GAAGH,OAAO,GAAG,CAAC,CAAA;UAC1B,IAAIG,MAAM,IAAI,CAAC,EAAE,MAAI,CAAChE,QAAQ,CAAC6D,OAAO,CAAC,GAAG;AACtC5H,YAAAA,KAAK,EAAE4H,OAAO;AACdtD,YAAAA,MAAM,EAAEA,MAAM;YACd8B,GAAG,EAAE,MAAI,CAACrC,QAAQ,CAACgE,MAAM,CAAC,CAACC,MAAM;YACjCA,MAAM,EAAE1D,MAAM,GAAG,MAAI,CAACP,QAAQ,CAACgE,MAAM,CAAC,CAACC,MAAAA;AAC3C,WAAC,CACI,KAAA;AACD,YAAA,MAAI,CAACjE,QAAQ,CAAC6D,OAAO,CAAC,GAAG;AACrB5H,cAAAA,KAAK,EAAE4H,OAAO;AACdtD,cAAAA,MAAM,EAAEA,MAAM;AACd8B,cAAAA,GAAG,EAAE,CAAC;AACN4B,cAAAA,MAAM,EAAE1D,MAAAA;aACX,CAAA;AACL,WAAA;AACAsD,UAAAA,OAAO,EAAE,CAAA;AACb,SAAC,CAAC,CAAA;AAEF9C,QAAAA,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,QAAQ,CAAC,CAAA;AAC9B,OAAC,MACI;AACD2D,QAAAA,QAAQ,CAAChH,OAAO,CAAC,UAAA0D,GAAG,EAAI;AACpB,UAAA,IAAIA,GAAG,CAAC6D,UAAU,CAAC1K,MAAM,EAAE;AACvB6G,YAAAA,GAAG,CAAC6D,UAAU,CAACvH,OAAO,CAAC,UAAA4E,EAAE,EAAI;AACzB,cAAA,IAAMhB,MAAM,GAAGgB,EAAE,CAACwC,qBAAqB,EAAE,CAACxD,MAAM,CAAA;AAChD,cAAA,IAAMyD,MAAM,GAAGH,OAAO,GAAG,CAAC,CAAA;cAC1B,IAAIG,MAAM,IAAI,CAAC,EAAE,MAAI,CAAChE,QAAQ,CAAC6D,OAAO,CAAC,GAAG;AACtC5H,gBAAAA,KAAK,EAAE4H,OAAO;AACdtD,gBAAAA,MAAM,EAAEA,MAAM;gBACd8B,GAAG,EAAE,MAAI,CAACrC,QAAQ,CAACgE,MAAM,CAAC,CAACC,MAAM;gBACjCA,MAAM,EAAE1D,MAAM,GAAG,MAAI,CAACP,QAAQ,CAACgE,MAAM,CAAC,CAACC,MAAAA;AAC3C,eAAC,CACI,KAAA;AACD,gBAAA,MAAI,CAACjE,QAAQ,CAAC6D,OAAO,CAAC,GAAG;AACrB5H,kBAAAA,KAAK,EAAE4H,OAAO;AACdtD,kBAAAA,MAAM,EAAEA,MAAM;AACd8B,kBAAAA,GAAG,EAAE,CAAC;AACN4B,kBAAAA,MAAM,EAAE1D,MAAAA;iBACX,CAAA;AACL,eAAA;AACAsD,cAAAA,OAAO,EAAE,CAAA;AACb,aAAC,CAAC,CAAA;AACN,WAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ,SAAC,CAAC,CAAA;AACN,OAAA;;AAEA;MACA9C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAChB,QAAQ,CAAC,CAAA;KACxC;IACDoD,WAAW,EAAA,SAAA,WAAA,CAACe,EAAE,EAAE;AACZ,MAAA,IAAM9B,GAAG,GAAG8B,EAAE,CAACC,MAAM,CAACC,SAAS,CAAA;AAE/BtD,MAAAA,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,QAAQ,CAAC,CAAA;AAC1B;AACA;AACA;AACA;;AAEA;MACA,IAAIhD,OAAO,GAAG,IAAI,CAACgD,QAAQ,CAACsE,IAAI,CAAC,UAAAjE,GAAG,EAAA;QAAA,OAAIA,GAAG,CAAC4D,MAAM,GAAG5B,GAAG,IAAIA,GAAG,IAAIhC,GAAG,CAACgC,GAAG,CAAA;OAAC,CAAA,CAAA;MAC3EtB,OAAO,CAACC,GAAG,CAAChE,OAAO,CAACf,KAAK,EAAE,SAAS,EAAEoG,GAAG,CAAC,CAAA;AAC1C,MAAA,IAAI,CAACzC,QAAQ,GAAG5C,OAAO,CAACf,KAAK,CAAA;AAC7B,MAAA,IAAI,CAACsD,UAAU,GAAGvC,OAAO,CAACuD,MAAM,CAAA;AAChC,MAAkBvD,OAAO,CAACqF,IAAG;MAE7B,IAAMkC,KAAK,GAAIlC,GAAG,GAAGA,GAAG,GAAGrF,OAAO,CAACuD,MAAO,CAAA;AAI1C,MAAA,IAAI,CAACnB,MAAM,CAACkB,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG0D,KAAK,GAAG,IAAI,CAAA;MAC3D,IAAI,CAACnF,MAAM,CAACkB,KAAK,CAACkE,SAAS,GAAA,iBAAA,CAAA,MAAA,CAAqBD,KAAK,EAAQ,QAAA,CAAA,CAAA;;AAE7D;MACA,IAAI,IAAI,CAAC3B,QAAQ,EAAE;AACf,QAAA,IAAI,CAACA,QAAQ,CAACtC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG0D,KAAK,GAAG,IAAI,CAAA;QAC7D,IAAI,CAAC3B,QAAQ,CAACtC,KAAK,CAACkE,SAAS,GAAA,iBAAA,CAAA,MAAA,CAAqBD,KAAK,EAAQ,QAAA,CAAA,CAAA;AACnE,OAAA;AACA;MACA,IAAI,IAAI,CAACxB,SAAS,EAAE;AAChB,QAAA,IAAI,CAACA,SAAS,CAACzC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACM,YAAY,GAAG0D,KAAK,GAAG,IAAI,CAAA;QAC9D,IAAI,CAACxB,SAAS,CAACzC,KAAK,CAACkE,SAAS,GAAA,iBAAA,CAAA,MAAA,CAAqBD,KAAK,EAAQ,QAAA,CAAA,CAAA;AACpE,OAAA;AAEJ,KAAA;GACH;EACDvJ,MAAM,EAAA,SAAA,MAAA,CAACP,CAAC,EAAE;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AACN,IAAc,IAAI,CAACgK,OAAM;AACzB,IAAA,OAAA,CAAA,CAAA,UAAA,EAAAnJ,aAAA,CAAA,CAAA;AAAA,MAAA,OAAA,EAAA;AAAA,QAAA,MAAA,EACoB,IAAI,CAACmF,KAAAA;AAAK,OAAA;AAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAS,IAAI,CAACgE,MAAAA;AAAM,KAAA,EAAA;AAAA,MAAA,KAAA,EAAO,IAAI,CAACnD,WAAAA;AAAW,KAAA,EAAA;AAAA,MAAA,IAAA,EAAM,IAAI,CAACoD,UAAAA;KAExE,CAAA,CAAA,EAAA,CAAA,IAAI,CAACvE,OAAO,CAAC3E,GAAG,CAAC,UAAAC,GAAG,EAAI;AACpB,MAAA,OAAA,CAAA,CAAA,SAAA,EAAAC,aAAA,CAAA,CAAA,EAAA,EAAA;AAAA,QAAA,OAAA,EAAAC,cAAA,CAAAA,cAAA,CAAA,EAAA,EAA8BF,GAAG,CAAA,EAAA,EAAA,EAAA;UAAEN,WAAW,EAAE,MAAI,CAACwJ,MAAAA;AAAM,SAAA,CAAA;AAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAI/D,KAAC,CAAC,EAAA,CAAA,CAAA,UAAA,EAAA;MAAA,MAES,EAAA,QAAA;AAAQ,KAAA,EAAA,CAClB,IAAI,CAACA,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA;AAKtC,GAAA;AAGJ,CAAC;;AC/TD,qBAAe;AACX9J,EAAAA,IAAI,EAAE,mBAAmB;AACzBE,EAAAA,UAAU,EAAE;AACR6J,IAAAA,QAAQ,EAARA,QAAAA;GACH;AACDpH,EAAAA,IAAI,EAAG,SAAA,IAAA,GAAA;IACH,OAAO;AACHqH,MAAAA,OAAO,EAAE,KAAA;KACZ,CAAA;GACJ;AACD1H,EAAAA,OAAO,EAAE;AACL2H,IAAAA,QAAQ,EAAG,SAAA,QAAA,GAAA;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;MACP,IAAI,CAACD,OAAO,GAAG,IAAI,CAAA;AACnB,MAAA,IAAI,CAACE,OAAO,EAAE,CAAA,SAAA,CACF,CAAC,YAAM;QACX,KAAI,CAACF,OAAO,GAAG,KAAK,CAAA;AACxB,OAAC,CAAC,CAAA;KACT;IACDG,UAAU,EAAA,SAAA,UAAA,CAACC,IAAI,EAAE;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AACb,MAAA,IAAI,CAACC,MAAM,CAACC,QAAQ,GAAGF,IAAI,CAAA;MAC3B,IAAI,CAACJ,OAAO,GAAG,IAAI,CAAA;AACnB,MAAA,IAAI,CAACE,OAAO,EAAE,CAAA,SAAA,CACF,CAAC,YAAM;QACX,MAAI,CAACF,OAAO,GAAG,KAAK,CAAA;AACxB,OAAC,CAAC,CAAA;KACT;IACDO,aAAa,EAAA,SAAA,aAAA,CAACC,IAAI,EAAE;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AAChB;AACA,MAAA,IAAI,CAACH,MAAM,CAACI,WAAW,GAAGD,IAAI,CAAA;MAC9B,IAAI,CAACR,OAAO,GAAG,IAAI,CAAA;AACnB,MAAA,IAAI,CAACE,OAAO,EAAE,CAAA,SAAA,CACF,CAAC,YAAM;QACX,MAAI,CAACF,OAAO,GAAG,KAAK,CAAA;AACxB,OAAC,CAAC,CAAA;AACV,KAAA;GACH;AACD5H,EAAAA,OAAO,EAAG,SAAA,OAAA,GAAA;IACN,IAAI,CAAC6H,QAAQ,EAAE,CAAA;GAClB;AACDtE,EAAAA,QAAQ,EAAE;AACN+E,IAAAA,MAAM,EAAG,SAAA,MAAA,GAAA;MACL,OAAO,IAAI,CAACd,MAAM,CAAA;KACrB;AACDS,IAAAA,MAAM,EAAG,SAAA,MAAA,GAAA;AACL,MAAA,OAAO,IAAI,CAACT,MAAM,CAACe,OAAO,CAAA;KAC7B;AACDT,IAAAA,OAAO,EAAG,SAAA,OAAA,GAAA;AACN,MAAA,OAAO,IAAI,CAACN,MAAM,CAACM,OAAO,CAAA;AAC9B,KAAA;GACH;AACD/J,EAAAA,MAAM,EAACP,SAAAA,MAAAA,CAAAA,CAAC,EAAEQ,OAAO,EAAE;AACf,IAAA,OAAA,CAAA,CAAA,KAAA,EAAA;MAAA,OACe,EAAA,qBAAA;AAAqB,KAAA,EAAA,CAAA,CAAA,CAAA,WAAA,EAAAS,aAAA,CAAA,CAAA,EAAA,EAAA;AAAA,MAAA,OAAA,EACV,IAAI,CAAC6J,MAAAA;AAAM,KAAA,EAAA;AAAA,MAAA,YAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAa,IAAI,CAACV,OAAAA;AAAO,OAAA,CAAA;AAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,eAAA,EAAAvJ,aAAA,CAAA,CAAA,EAAA,EAAA;AAAA,MAAA,OAAA,EAE3C,IAAI,CAAC4J,MAAAA;AAAM,KAAA,EAAA,EAAA,EAAA;MAAA,IAEd,EAAA;QACI,aAAa,EAAE,IAAI,CAACF,UAAU;QAC9B,gBAAgB,EAAE,IAAI,CAACI,aAAAA;AAC3B,OAAA;AAAC,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAKrB,GAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CAAC;;;;"}