{"version":3,"file":"ele-table.js","sources":["../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../src/column.js","../../src/init.js","../../src/originElement.js","../../src/selection.js","../../src/vertual.js","../../src/merge.js","../../src/table.js","../../src/tableContainer.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=[].concat(d,e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=[].concat(g,h)}else c[b][f]=a[b][f];}else if(\"hook\"===b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};export default mergeJsxProps;\n","const eleColumn = {\r\n    name: 'eleColumn',\r\n    functional: true,\r\n    components: { eleColumn },\r\n    render(h, context) {\r\n        const props = context.props\r\n        const globalSlots = props.globalSlots || null\r\n\r\n        function defaultRender(h, props) {\r\n            return props.render ?\r\n                { default: (prop) => props.render(h, prop) } : {}\r\n        }\r\n\r\n        return (\r\n            <el-table-column props={props} scopedSlots={defaultRender(h, props)} >\r\n                {\r\n                    props.children ?\r\n                        props.children.map(col =>\r\n                            <eleColumn props={{ ...col, globalSlots }} ></eleColumn>\r\n                        ) : null\r\n                }\r\n            </el-table-column >)\r\n    }\r\n}\r\n\r\n\r\nexport default eleColumn","function throttle(fn, time) {\r\n    let date = null\r\n    return (...arg) => {\r\n        if (date) return\r\n        date = setTimeout(() => {\r\n            fn(...arg)\r\n            date = null\r\n        }, time)\r\n    }\r\n}\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableRef: null,\r\n            warpperRef: null,\r\n            // \r\n            elWarp: null,\r\n            elItems: null,\r\n            elTbody: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getTableRef()\r\n    },\r\n    methods: {\r\n        getTableRef() {\r\n            if (this.tableRef) return\r\n            this.tableRef = this.$children[0]\r\n            this.tableRef.$children.forEach(vnode => {\r\n                const option = vnode.$options\r\n                if (option.name === \"ElTableBody\") this.warpperRef = vnode\r\n            })\r\n            this.elTbody = this.warpperRef.$el.querySelector('tbody')\r\n            // \r\n            this.initProxy()\r\n\r\n            this.appendWarp()\r\n\r\n        },\r\n        initProxy() {\r\n            // wrappedRowRender\r\n            const that = this\r\n            const _orgWrappedRowRender = this.warpperRef.wrappedRowRender\r\n            this.warpperRef.wrappedRowRender = function (row, index) {\r\n                return _orgWrappedRowRender(row, index + that.bufferIdx)\r\n            }\r\n        },\r\n        appendWarp() {\r\n            const elTable = this.tableRef.$el\r\n            // \r\n            this.elWarp = document.createElement('div')\r\n            this.elWarp.className = 'ele-vertual-warp'\r\n\r\n            this.elWarp.style.position = 'relative'\r\n            // \r\n            this.elItems = document.createElement('div')\r\n            this.elItems.className = 'ele-vertual-warpItems'\r\n            this.elItems.style.position = 'absolute'\r\n            this.elItems.style.left = '0px'\r\n            this.elItems.style.top = '0px'\r\n\r\n            const elWarpper = elTable.querySelector('.el-table__body-wrapper')\r\n            const elWarpperTable = elWarpper.querySelector('table')\r\n\r\n            elWarpper.insertBefore(this.elWarp, elWarpperTable)\r\n            this.elItems.appendChild(elWarpperTable)\r\n            this.elWarp.appendChild(this.elItems)\r\n\r\n            // left\r\n            const elLeftWarpper = elTable.querySelector('.el-table__fixed .el-table__fixed-body-wrapper')\r\n            if (elLeftWarpper) {\r\n                this.leftWarp = document.createElement('div')\r\n                this.leftWarp.className = 'ele-vertual-warp-right'\r\n                // this.leftWarp.style.height = this.globalHeight + 'px'\r\n                const elLeftWarrperTable = elLeftWarpper.querySelector('table')\r\n                elLeftWarpper.insertBefore(this.leftWarp, elLeftWarrperTable)\r\n                this.leftWarp.appendChild(elLeftWarrperTable)\r\n            }\r\n\r\n            // right\r\n            const elRightWarpper = elTable.querySelector('.el-table__fixed-right .el-table__fixed-body-wrapper')\r\n            if (elRightWarpper) {\r\n                this.rightWarp = document.createElement('div')\r\n                this.rightWarp.className = 'ele-vertual-warp-right'\r\n                // this.rightWarp.style.height = this.globalHeight + 'px'\r\n                const elRightWarrperTable = elRightWarpper.querySelector('table')\r\n                elRightWarpper.insertBefore(this.rightWarp, elRightWarrperTable)\r\n                this.rightWarp.appendChild(elRightWarrperTable)\r\n            }\r\n\r\n            // scroll-event\r\n            elWarpper.addEventListener('scroll', throttle.call(this, this.eventScroll, 0))\r\n\r\n        },\r\n        initItemHeight() {\r\n            if (this.itemHeight) return this.itemHeight\r\n            const average = this.elTbody.offsetHeight / (this.vCount + this.bufferCount)\r\n            this.itemHeight = Math.round(average)\r\n            const warpHeight = this.tableRef.$el.offsetHeight\r\n\r\n            // this.vCount = Math.ceil(warpHeight / average)\r\n\r\n            this.elWarp.style.height = this.globalHeight + 'px'\r\n            return this.itemHeight\r\n        },\r\n        getGloHeight() {\r\n            console.log(this.position, this.data.length - 1, 'globalHeight', this.position[this.data.length - 1] || 0)\r\n            if (this.vertual) return this.position[this.data.length - 1] || 0\r\n            else return this.data.length * this.itemHeight\r\n        },\r\n    }\r\n}","export function toggleRowStatus(statusArr, row, newVal) {\r\n    let changed = false;\r\n    const index = statusArr.indexOf(row);\r\n    const included = index !== -1;\r\n\r\n    const addRow = () => {\r\n        statusArr.push(row);\r\n        changed = true;\r\n    };\r\n    const removeRow = () => {\r\n        statusArr.splice(index, 1);\r\n        changed = true;\r\n    };\r\n\r\n    if (typeof newVal === 'boolean') {\r\n        if (newVal && !included) {\r\n            addRow();\r\n        } else if (!newVal && included) {\r\n            removeRow();\r\n        }\r\n    } else {\r\n        if (included) {\r\n            removeRow();\r\n        } else {\r\n            addRow();\r\n        }\r\n    }\r\n    return changed;\r\n}\r\n\r\nexport const getKeysMap = function (array, rowKey) {\r\n    const arrayMap = {};\r\n    (array || []).forEach((row, index) => {\r\n        arrayMap[getRowIdentity(row, rowKey)] = { row, index };\r\n    });\r\n    return arrayMap;\r\n};\r\n\r\nexport const getRowIdentity = (row, rowKey) => {\r\n    if (!row) throw new Error('row is required when get row identity');\r\n    if (typeof rowKey === 'string') {\r\n        if (rowKey.indexOf('.') < 0) {\r\n            return row[rowKey];\r\n        }\r\n        let key = rowKey.split('.');\r\n        let current = row;\r\n        for (let i = 0; i < key.length; i++) {\r\n            current = current[key[i]];\r\n        }\r\n        return current;\r\n    } else if (typeof rowKey === 'function') {\r\n        return rowKey.call(null, row);\r\n    }\r\n};\r\n\r\nexport function getRowClass(row, rowIndex) {\r\n    const classes = ['el-table__row', `row_${rowIndex}`];\r\n    if (this.table.highlightCurrentRow && row === this.store.states.currentRow) {\r\n        classes.push('current-row');\r\n    }\r\n\r\n    if (this.stripe && rowIndex % 2 === 1) {\r\n        classes.push('el-table__row--striped');\r\n    }\r\n    const rowClassName = this.table.rowClassName;\r\n    if (typeof rowClassName === 'string') {\r\n        classes.push(rowClassName);\r\n    } else if (typeof rowClassName === 'function') {\r\n        classes.push(rowClassName.call(null, {\r\n            row,\r\n            rowIndex\r\n        }));\r\n    }\r\n\r\n    if (this.store.states.expandRows.indexOf(row) > -1) {\r\n        classes.push('expanded');\r\n    }\r\n\r\n    return classes;\r\n}","import { toggleRowStatus, getKeysMap, getRowIdentity } from './originElement'\r\nexport default {\r\n    mounted() {\r\n        this.initSelection()\r\n    },\r\n    methods: {\r\n        initSelection() {\r\n            if(!this.tableRef) throw new Error('MODULE-SELECTION: tableRef is undefined')\r\n            const that = this\r\n            // 全选\r\n            function _toggleAllSelection() {\r\n                const states = this.states;\r\n                const { selection } = states;\r\n                // when only some rows are selected (but not all), select or deselect all of them\r\n                // depending on the value of selectOnIndeterminate\r\n                const value = states.selectOnIndeterminate\r\n                    ? !states.isAllSelected\r\n                    : !(states.isAllSelected || selection.length);\r\n                states.isAllSelected = value;\r\n\r\n                let selectionChanged = false;\r\n                that.data.forEach((row, index) => {\r\n                    if (states.selectable) {\r\n                        if (states.selectable.call(null, row, index) && toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    } else {\r\n                        if (toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (selectionChanged) {\r\n                    this.table.$emit('selection-change', selection ? selection.slice() : []);\r\n                }\r\n                this.table.$emit('select-all', selection);\r\n            }\r\n            // 全选状态\r\n            function _updateAllSelected() {\r\n                const states = this.states;\r\n                const { selection, rowKey, selectable } = states;\r\n                // data 为 null 时，解构时的默认值会被忽略\r\n                const data = that.data || [];\r\n                if (data.length === 0) {\r\n                    states.isAllSelected = false;\r\n                    return;\r\n                }\r\n\r\n                let selectedMap;\r\n                if (rowKey) {\r\n                    selectedMap = getKeysMap(selection, rowKey);\r\n                }\r\n                const isSelected = function (row) {\r\n                    if (selectedMap) {\r\n                        return !!selectedMap[getRowIdentity(row, rowKey)];\r\n                    } else {\r\n                        return selection.indexOf(row) !== -1;\r\n                    }\r\n                };\r\n                let isAllSelected = true;\r\n                let selectedCount = 0;\r\n                for (let i = 0, j = data.length; i < j; i++) {\r\n                    const item = data[i];\r\n                    const isRowSelectable = selectable && selectable.call(null, item, i);\r\n                    if (!isSelected(item)) {\r\n                        if (!selectable || isRowSelectable) {\r\n                            isAllSelected = false;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        selectedCount++;\r\n                    }\r\n                }\r\n\r\n                if (selectedCount === 0) isAllSelected = false;\r\n                states.isAllSelected = isAllSelected;\r\n            }\r\n            this.tableRef.store.toggleAllSelection = _toggleAllSelection\r\n            this.tableRef.store.updateAllSelected = _updateAllSelected\r\n        }\r\n    }\r\n}","export default {\r\n    data() {\r\n        return {\r\n            posMap: [],\r\n            position: []\r\n        }\r\n    },\r\n    props: {\r\n        vertual: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        estimatedHeight: {\r\n            type: Number,\r\n            default: 0\r\n        }\r\n    },\r\n    updated() {\r\n        this.getposMap()\r\n    },\r\n    methods: {\r\n        getposMap() {\r\n            const tbody = this.elWarp.querySelectorAll('tr')\r\n            const idx = this.startIdx - this.bufferCount > 0 ? this.startIdx - this.bufferCount : 0\r\n            // const idx = this.startIdx - this.bufferCount > 0 ? this.bufferIdx : 0\r\n            let bottom = this.position[idx - 1] || 0\r\n            // let bottom = 0\r\n            tbody.forEach((el, index) => {\r\n                bottom += el.offsetHeight\r\n                this.posMap[idx + index] = bottom\r\n                this.position[idx + index] = bottom\r\n            })\r\n        },\r\n        getPosition() {\r\n            let pos = []\r\n            let bottom = 0\r\n            this.data.map((val, index) => {\r\n                const curMap = this.posMap[index]\r\n                if (curMap) bottom = curMap\r\n                else bottom += this.estimatedHeight || this.itemHeight\r\n\r\n                pos[index] = bottom\r\n            })\r\n            this.position = pos\r\n            return pos\r\n        },\r\n        getPosIdx(scrollTop) {\r\n            const idx = this.position.findIndex(bottom => scrollTop <= bottom)\r\n            const height = this.position[idx - 1] ? this.position[idx] - this.position[idx - 1] : this.position[idx]\r\n            const bottom = this.position[idx]\r\n\r\n            return [idx, height, bottom]\r\n        }\r\n    }\r\n}","export default {\r\n    data() {\r\n        return {\r\n            originSpanMehtod: [],\r\n            curRowSpan: {},\r\n            mergeKeyIndex: [],\r\n            mergeMap: {}, //  [col,col,col]\r\n            bufferMergeMap: {}, // 第一次的rowspan\r\n            bufferBtn: 0  // \r\n        }\r\n    },\r\n    props: {\r\n        merge: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.initSpanMethod()\r\n        this.mergeKeyIndex = this.getMergeKeyIndex(this.columns)\r\n        // this.initMergeArr()\r\n    },\r\n    mounted() {\r\n        this.initMergeMap(this.data)\r\n    },\r\n    beforeUpdate() {\r\n        // this.initMergeMap(this.data)\r\n        console.log('update')\r\n        this.bufferBtn = 0\r\n    },\r\n    methods: {\r\n        initSpanMethod() {\r\n            if (this.$attrs['span-method']) return\r\n            else if (this.merge) this.$attrs['span-method'] = this.handlerMerge\r\n        },\r\n\r\n        // 初始化映射\r\n        initMergeMap(data = this.data) {\r\n            // const propsArr = this.getRowKey()\r\n            let rowSpanMap = {}\r\n\r\n            data.map((row, index) => {\r\n                const nextRow = data[index + 1] || {}\r\n\r\n                this.merge.forEach(key => {\r\n                    if (!this.mergeMap[key]) this.mergeMap[key] = []\r\n\r\n                    if (row[key] === nextRow[key]) {\r\n                        if (rowSpanMap[key]) {\r\n                            this.mergeMap[key].push({ rowspan: 0, colspan: 1 })\r\n                            rowSpanMap[key].rowspan += 1\r\n                        }\r\n                        else {\r\n                            rowSpanMap[key] = { rowspan: 1, colspan: 1 }\r\n                            this.mergeMap[key].push(rowSpanMap[key])\r\n                        }\r\n                    } else {\r\n                        if (rowSpanMap[key]) {\r\n                            rowSpanMap[key].rowspan += 1\r\n                            this.mergeMap[key].push({ rowspan: 0, colspan: 1 })\r\n                        }\r\n                        else this.mergeMap[key].push({ rowspan: 1, colspan: 1 })\r\n                        rowSpanMap[key] = null\r\n                    }\r\n                })\r\n            })\r\n\r\n            console.log(this.mergeMap)\r\n\r\n        },\r\n        fixBufferMergeMap(mergeKey, rowIndex) {\r\n\r\n            // 修改第一个\r\n            if (rowIndex === this.bufferIdx) {\r\n                //  是否需要重新计算 rowspan\r\n                if (this.mergeMap[mergeKey][this.bufferIdx].rowspan === 0) {\r\n\r\n                    return {\r\n                        rowspan: this.mergeMap[mergeKey].slice(this.bufferIdx).findIndex(val => val.rowspan !== 0),\r\n                        colspan: 1\r\n                    }\r\n                } else return this.mergeMap[mergeKey][this.bufferIdx]\r\n            } else return this.mergeMap[mergeKey][rowIndex]\r\n        },\r\n        getMergeKeyIndex(columns) {\r\n            function getKeyIndex(columns, mergeKey, idx = 0) {\r\n                let merg = {}\r\n                columns.forEach((val, index) => {\r\n                    if (val.prop === mergeKey) {\r\n                        merg = {\r\n                            key: mergeKey,\r\n                            index: index + idx\r\n                        }\r\n                    } else if (val.children) {\r\n                        merg = getKeyIndex(val.children, mergeKey, index)\r\n                    }\r\n                })\r\n\r\n                return merg\r\n            }\r\n\r\n            return this.merge.map((key) => {\r\n                return getKeyIndex(columns, key)\r\n            })\r\n        },\r\n        // changeBuffIdx(key, rowIndex) {\r\n        //     if (this.mergeMap[key][this.bufferIdx].rowspan === 0) {\r\n        //         this.bufferCount = 10\r\n        //     }\r\n        // },\r\n        handlerMerge({ rowIndex, columnIndex }) {\r\n            let spanRow = [1, 1]\r\n            this.mergeKeyIndex.forEach(({ key, index }) => {\r\n                // 设置虚拟列表缓存区\r\n                if (columnIndex === index) {\r\n                    spanRow = this.fixBufferMergeMap(key, rowIndex)\r\n                }\r\n\r\n                // step 2\r\n                // if(columnIndex === index) {\r\n                //     this.changeBuffIdx(key, columnIndex)\r\n                //     spanRow = this.mergeMap[key][rowIndex]\r\n                // }\r\n\r\n\r\n            })\r\n\r\n            return spanRow\r\n        }\r\n    }\r\n}","import eleColumn from './column'\r\n\r\nimport init from './init'\r\nimport selection from './selection'\r\nimport vertual from './vertual'\r\nimport merge from './merge'\r\n\r\n\r\nexport default {\r\n    name: 'eleTable',\r\n    components: { eleColumn },\r\n    mixins: [init, selection, vertual, merge],\r\n    data() {\r\n        return {\r\n            // \r\n            itemHeight: 0,\r\n            // \r\n            vCount: 10,\r\n            startIdx: 0,\r\n            // top\r\n            selections: [],\r\n            WeakMap: new Map(),\r\n            posMap: [],\r\n            btn: true\r\n        }\r\n    },\r\n    props: {\r\n        data: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        },\r\n        columns: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        },\r\n        bufferCount: {\r\n            type: Number,\r\n            default: 0\r\n        }\r\n    },\r\n    computed: {\r\n        vData() {\r\n            const start = this.bufferIdx\r\n            const end = this.startIdx + this.vCount + this.bufferCount\r\n\r\n            return this.data.slice(start, end)\r\n        },\r\n        bufferIdx() {\r\n            return this.startIdx - this.bufferCount > 0 ? this.startIdx - this.bufferCount : 0\r\n        },\r\n        globalHeight() {\r\n            if (this.vertual) {\r\n\r\n                return this.position[this.data.length - 1] || 0\r\n            }\r\n            else {\r\n                this.elWarp.style.height = this.data.length * this.itemHeight + 'px'\r\n                return this.data.length * this.itemHeight\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        console.log('mounted', this)\r\n\r\n        this.$nextTick(() => {\r\n            this.updateAllData()\r\n        })\r\n\r\n    },\r\n    methods: {\r\n        updateAllData() {\r\n            this.$nextTick(() => {\r\n                this.initItemHeight()\r\n                this.getPosition()\r\n                this.getposMap()\r\n\r\n                this.eventScroll()\r\n            })\r\n        },\r\n        eventScroll(ev) {\r\n            const scrollTop = ev?.target?.scrollTop || 0\r\n            let topTo = 0\r\n\r\n            if (!this.vertual) {\r\n                this.startIdx = Math.floor(scrollTop / this.itemHeight)\r\n                const bufferTop = (this.startIdx - this.bufferIdx) * this.itemHeight\r\n                topTo = (scrollTop - scrollTop % this.itemHeight) - bufferTop\r\n\r\n            }\r\n\r\n            if (this.vertual) {\r\n                const [idx, height, bottom] = this.getPosIdx(scrollTop)\r\n                this.startIdx = idx\r\n                topTo = bottom - height\r\n            }\r\n\r\n\r\n\r\n            this.elWarp.style.height = this.globalHeight - topTo + 'px'\r\n            this.elWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n\r\n\r\n            // left\r\n            if (this.leftWarp) {\r\n                this.leftWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.leftWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n            // right\r\n            if (this.rightWarp) {\r\n                this.rightWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.rightWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n    render() {\r\n        return (\r\n            <el-table data={this.vData} attrs={this.$attrs} on={this.$listeners}  >\r\n                {\r\n                    this.columns.map(col => {\r\n                        return <eleColumn props={{ ...col, globalSlots: this.$slots }}   >\r\n                            {/* <template slot={col.slotName}><slot name={col.slotName}></slot></template> */}\r\n\r\n                        </eleColumn>\r\n                    })\r\n                }\r\n                <template slot='append'>\r\n                    {this.$slots['append']}\r\n                </template>\r\n            </el-table>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import eleTable from './table'\r\n\r\nexport default {\r\n    name: 'eleTableContainer',\r\n    components: {\r\n        eleTable\r\n    },\r\n    data() {\r\n        return {\r\n            loading: false,\r\n        }\r\n    },\r\n    methods: {\r\n        getAxios() {\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        sizeChange(size) {\r\n            this.pProps.pageSize = size\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        currentChange(page) {\r\n            // if (this.loading) return\r\n            this.pProps.currentPage = page\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAxios()\r\n    },\r\n    computed: {\r\n        tProps() {\r\n            return this.$attrs\r\n        },\r\n        pProps() {\r\n            return this.$attrs.pageOpt\r\n        },\r\n        getData() {\r\n            return this.$attrs.getData\r\n        },\r\n    },\r\n    render() {\r\n        return (\r\n            <div class='ele-table-container'>\r\n                <ele-table props={this.tProps} v-loading={this.loading}></ele-table>\r\n                <el-pagination\r\n                    props={this.pProps}\r\n                    on={\r\n                        {\r\n                            'size-change': this.sizeChange,\r\n                            'current-change': this.currentChange\r\n                        }\r\n                    }\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** functional */\r\n    // render(h, context) {\r\n    //     console.log(_loading, '1')\r\n    //     const pProps = context.props.pageOpt\r\n    //     const tProps = context.props\r\n    //     const getData = context.props.getData\r\n\r\n    //     if(!created) {\r\n    //         getAxios()\r\n    //         created = true\r\n    //     } \r\n\r\n    //     function getAxios() {\r\n    //         _loading = true\r\n    //         setTimeout(() => {\r\n    //             getData().finally(_loading = false)\r\n    //         })\r\n    //     }\r\n\r\n    //     function sizeChange(size) {\r\n    //         pProps.pageSize = size\r\n    //         console.log('sizeChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n\r\n    //     }\r\n\r\n    //     function currentChange(page) {\r\n    //         pProps.currentPage = page\r\n    //         console.log('currentChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n    //     }\r\n\r\n\r\n\r\n    //     return (\r\n    //         <div class='ele-table-container'>\r\n    //             <ele-table props={{ ...tProps }} v-loading={_loading}></ele-table>\r\n    //             <el-pagination\r\n    //                 props={{ ...pProps }}\r\n    //                 on={\r\n    //                     {\r\n    //                         'size-change': sizeChange,\r\n    //                         'current-change': currentChange\r\n    //                     }\r\n    //                 }\r\n    //             />\r\n    //         </div >\r\n    //     )\r\n    // },\r\n}"],"names":["_extends","Object","assign","bind","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","eleColumn","name","functional","components","render","context","props","globalSlots","defaultRender","prop","_mergeJSXProps2","children","map","col","_mergeJSXProps","_objectSpread","throttle","fn","time","date","arg","setTimeout","data","tableRef","warpperRef","elWarp","elItems","elTbody","mounted","getTableRef","methods","$children","forEach","vnode","option","$options","$el","querySelector","initProxy","appendWarp","that","_orgWrappedRowRender","wrappedRowRender","row","index","bufferIdx","elTable","document","createElement","className","style","position","left","top","elWarpper","elWarpperTable","insertBefore","appendChild","elLeftWarpper","leftWarp","elLeftWarrperTable","elRightWarpper","rightWarp","elRightWarrperTable","addEventListener","eventScroll","initItemHeight","itemHeight","average","offsetHeight","vCount","bufferCount","Math","round","height","globalHeight","getGloHeight","console","log","vertual","toggleRowStatus","statusArr","newVal","changed","included","addRow","push","removeRow","splice","getKeysMap","array","rowKey","arrayMap","getRowIdentity","Error","key","split","current","initSelection","_toggleAllSelection","states","selection","value","selectOnIndeterminate","isAllSelected","selectionChanged","selectable","table","$emit","slice","_updateAllSelected","selectedMap","isSelected","selectedCount","j","item","isRowSelectable","store","toggleAllSelection","updateAllSelected","posMap","type","Boolean","estimatedHeight","Number","updated","getposMap","tbody","querySelectorAll","idx","startIdx","bottom","el","getPosition","pos","val","curMap","getPosIdx","scrollTop","findIndex","originSpanMehtod","curRowSpan","mergeKeyIndex","mergeMap","bufferMergeMap","bufferBtn","merge","created","initSpanMethod","getMergeKeyIndex","columns","initMergeMap","beforeUpdate","$attrs","handlerMerge","rowSpanMap","nextRow","rowspan","colspan","fixBufferMergeMap","mergeKey","rowIndex","getKeyIndex","merg","columnIndex","spanRow","mixins","init","selections","WeakMap","Map","btn","computed","vData","start","end","$nextTick","updateAllData","ev","target","topTo","floor","bufferTop","transform","$listeners","$slots","eleTable","loading","getAxios","getData","sizeChange","size","pProps","pageSize","currentChange","page","currentPage","tProps","pageOpt"],"mappings":"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"}