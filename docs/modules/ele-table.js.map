{"version":3,"file":"ele-table.js","sources":["../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../src/column.js","../../src/originElement.js","../../src/selection.js","../../src/table.js","../../src/tableContainer.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=[].concat(d,e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=[].concat(g,h)}else c[b][f]=a[b][f];}else if(\"hook\"===b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};export default  mergeJsxProps;\n","const eleColumn = {\r\n    name: 'eleColumn',\r\n    functional: true,\r\n    components: { eleColumn },\r\n    render(h, context) {\r\n        const props = context.props\r\n        const globalSlots = props.globalSlots || null\r\n\r\n        function defaultRender(h, props) {\r\n            return props.render ?\r\n                { default: (prop) => props.render(h, prop) } : {}\r\n        }\r\n\r\n        return (\r\n            <el-table-column props={props} scopedSlots={defaultRender(h, props)} >\r\n                {\r\n                    props.children ?\r\n                        props.children.map(col =>\r\n                            <eleColumn props={{ ...col, globalSlots }} ></eleColumn>\r\n                        ) : null\r\n                }\r\n            </el-table-column >)\r\n    }\r\n}\r\n\r\n\r\nexport default eleColumn","export function toggleRowStatus(statusArr, row, newVal) {\r\n    let changed = false;\r\n    const index = statusArr.indexOf(row);\r\n    const included = index !== -1;\r\n\r\n    const addRow = () => {\r\n        statusArr.push(row);\r\n        changed = true;\r\n    };\r\n    const removeRow = () => {\r\n        statusArr.splice(index, 1);\r\n        changed = true;\r\n    };\r\n\r\n    if (typeof newVal === 'boolean') {\r\n        if (newVal && !included) {\r\n            addRow();\r\n        } else if (!newVal && included) {\r\n            console.log('removeRow', index);\r\n            removeRow();\r\n        }\r\n    } else {\r\n        if (included) {\r\n            removeRow();\r\n        } else {\r\n            addRow();\r\n        }\r\n    }\r\n    return changed;\r\n}\r\n\r\nexport const getKeysMap = function (array, rowKey) {\r\n    const arrayMap = {};\r\n    (array || []).forEach((row, index) => {\r\n        arrayMap[getRowIdentity(row, rowKey)] = { row, index };\r\n    });\r\n    return arrayMap;\r\n};\r\n\r\nexport const getRowIdentity = (row, rowKey) => {\r\n    if (!row) throw new Error('row is required when get row identity');\r\n    if (typeof rowKey === 'string') {\r\n        if (rowKey.indexOf('.') < 0) {\r\n            return row[rowKey];\r\n        }\r\n        let key = rowKey.split('.');\r\n        let current = row;\r\n        for (let i = 0; i < key.length; i++) {\r\n            current = current[key[i]];\r\n        }\r\n        return current;\r\n    } else if (typeof rowKey === 'function') {\r\n        return rowKey.call(null, row);\r\n    }\r\n};","import { toggleRowStatus, getKeysMap, getRowIdentity } from './originElement'\r\nexport default {\r\n    mounted() {\r\n        this.initSelection()\r\n    },\r\n    methods: {\r\n        initSelection() {\r\n            if(!this.tableRef) throw new Error('tableRef is error')\r\n            const that = this\r\n            // 全选\r\n            function _toggleAllSelection() {\r\n                const states = this.states;\r\n                const { data = [], selection } = states;\r\n                // when only some rows are selected (but not all), select or deselect all of them\r\n                // depending on the value of selectOnIndeterminate\r\n                const value = states.selectOnIndeterminate\r\n                    ? !states.isAllSelected\r\n                    : !(states.isAllSelected || selection.length);\r\n                states.isAllSelected = value;\r\n\r\n                let selectionChanged = false;\r\n                that.data.forEach((row, index) => {\r\n                    if (states.selectable) {\r\n                        if (states.selectable.call(null, row, index) && toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    } else {\r\n                        if (toggleRowStatus(selection, row, value)) {\r\n                            selectionChanged = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (selectionChanged) {\r\n                    this.table.$emit('selection-change', selection ? selection.slice() : []);\r\n                }\r\n                this.table.$emit('select-all', selection);\r\n            }\r\n            // 全选状态\r\n            function _updateAllSelected() {\r\n                const states = this.states;\r\n                const { selection, rowKey, selectable } = states;\r\n                // data 为 null 时，解构时的默认值会被忽略\r\n                const data = that.data || [];\r\n                if (data.length === 0) {\r\n                    states.isAllSelected = false;\r\n                    return;\r\n                }\r\n\r\n                let selectedMap;\r\n                if (rowKey) {\r\n                    selectedMap = getKeysMap(selection, rowKey);\r\n                }\r\n                const isSelected = function (row) {\r\n                    if (selectedMap) {\r\n                        return !!selectedMap[getRowIdentity(row, rowKey)];\r\n                    } else {\r\n                        return selection.indexOf(row) !== -1;\r\n                    }\r\n                };\r\n                let isAllSelected = true;\r\n                let selectedCount = 0;\r\n                for (let i = 0, j = data.length; i < j; i++) {\r\n                    const item = data[i];\r\n                    const isRowSelectable = selectable && selectable.call(null, item, i);\r\n                    if (!isSelected(item)) {\r\n                        if (!selectable || isRowSelectable) {\r\n                            isAllSelected = false;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        selectedCount++;\r\n                    }\r\n                }\r\n\r\n                if (selectedCount === 0) isAllSelected = false;\r\n                states.isAllSelected = isAllSelected;\r\n            }\r\n            this.tableRef.store.toggleAllSelection = _toggleAllSelection\r\n            this.tableRef.store.updateAllSelected = _updateAllSelected\r\n        }\r\n    }\r\n}","import eleColumn from './column'\r\nimport selection from './selection'\r\n\r\n\r\nexport default {\r\n    name: 'eleTable',\r\n    components: { eleColumn },\r\n    mixins: [selection],\r\n    data() {\r\n        return {\r\n            item: [],\r\n            tableRef: null,\r\n            warpperRef: null,\r\n            // \r\n            elWarp: null,\r\n            elItems: null,\r\n            // \r\n            elWarpHeight: null,\r\n            itemHeight: 48,\r\n            itemHeightArr: [],\r\n            // \r\n            vCount: 7,\r\n            bufferCount: 2,\r\n            bufferHeight: 0,\r\n            startIdx: 0,\r\n            // top\r\n            selections: [],\r\n            btn: true\r\n        }\r\n    },\r\n    props: {\r\n        data: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        },\r\n        columns: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        data(val) {\r\n            this.elWarp.style.height = this.elItems * val.length + 'px'\r\n        }\r\n    },\r\n    computed: {\r\n        vData() {\r\n            const start = this.bufferIdx\r\n            const end = this.startIdx + this.vCount + this.bufferCount\r\n\r\n            return this.data.slice(start, end)\r\n        },\r\n        bufferIdx() {\r\n            return this.startIdx - this.bufferCount > 0 ? this.startIdx - this.bufferCount : 0\r\n        },\r\n        globalHeight() {\r\n            return this.data.length * this.itemHeight\r\n        },\r\n    },\r\n    mounted() {\r\n        this.initProxy()\r\n        console.log('mounted')\r\n    },\r\n    updated() {\r\n        console.log('updated')\r\n    },\r\n    methods: {\r\n        initProxy() {\r\n            // wrappedRowRender\r\n            const that = this\r\n            const _orgWrappedRowRender = this.warpperRef.wrappedRowRender\r\n            this.warpperRef.wrappedRowRender = function (row, index) {\r\n                return _orgWrappedRowRender(row, index + that.bufferIdx)\r\n            }\r\n\r\n\r\n        },\r\n        refCallBack(el) {\r\n            if (this.tableRef) return\r\n            this.tableRef = el\r\n            this.tableRef.$children.forEach(vnode => {\r\n                const option = vnode.$options\r\n                if (option.name === \"ElTableBody\") this.warpperRef = vnode\r\n            })\r\n            this.tbody = this.warpperRef.$el.querySelectorAll('tbody')\r\n\r\n            this.$nextTick(() => this.appendWarp())\r\n\r\n\r\n        },\r\n        bufferItemArr() {\r\n            // const trNodes = [...this.elWarp.querySelectorAll('tr')]\r\n            // this.itemHeightArr = trNodes.map((node,index) => {\r\n            //     return node.offsetHeight\r\n            // })\r\n            [...this.elWarp.querySelectorAll('tr')].forEach((node, index) => {\r\n                if (this.bufferIdx) this.itemHeight\r\n            })\r\n\r\n        },\r\n        appendWarp() {\r\n            const elTable = this.tableRef.$el\r\n            // \r\n            this.elWarp = document.createElement('div')\r\n            this.elWarp.className = 'ele-vertual-warp'\r\n            this.elWarp.style.height = this.globalHeight + 'px'\r\n            // \r\n            this.elItems = document.createElement('div')\r\n            this.elItems.className = 'ele-vertual-warpItems'\r\n\r\n            const elWarpper = elTable.querySelector('.el-table__body-wrapper')\r\n            const elWarpperTable = elWarpper.querySelector('table')\r\n\r\n            elWarpper.insertBefore(this.elWarp, elWarpperTable)\r\n            this.elItems.appendChild(elWarpperTable)\r\n            this.elWarp.appendChild(this.elItems)\r\n\r\n            // left\r\n            const elLeftWarpper = elTable.querySelector('.el-table__fixed .el-table__fixed-body-wrapper')\r\n            if (elLeftWarpper) {\r\n                this.leftWarp = document.createElement('div')\r\n                this.leftWarp.className = 'ele-vertual-warp-right'\r\n                this.leftWarp.style.height = this.globalHeight + 'px'\r\n                const elLeftWarrperTable = elLeftWarpper.querySelector('table')\r\n                console.log(elLeftWarpper)\r\n                elLeftWarpper.insertBefore(this.leftWarp, elLeftWarrperTable)\r\n                this.leftWarp.appendChild(elLeftWarrperTable)\r\n            }\r\n\r\n            // right\r\n            const elRightWarpper = elTable.querySelector('.el-table__fixed-right .el-table__fixed-body-wrapper')\r\n            if (elRightWarpper) {\r\n                this.rightWarp = document.createElement('div')\r\n                this.rightWarp.className = 'ele-vertual-warp-right'\r\n                this.rightWarp.style.height = this.globalHeight + 'px'\r\n                const elRightWarrperTable = elRightWarpper.querySelector('table')\r\n                console.log(elRightWarpper)\r\n                elRightWarpper.insertBefore(this.rightWarp, elRightWarrperTable)\r\n                this.rightWarp.appendChild(elRightWarrperTable)\r\n            }\r\n\r\n\r\n\r\n\r\n            setTimeout(() => {\r\n                // const that = this\r\n                // let oldStartIdx = this.startIdx\r\n                // let oldStartHeight = this.itemHeight\r\n                // const obsver = new MutationObserver(function (mutationList, observer) {\r\n                //     const idx = that.startIdx - that.bufferIdx\r\n                //     const rect = elWarpper.querySelectorAll('tr')[idx].getBoundingClientRect()\r\n                //     that.itemHeight = rect.height\r\n\r\n                //     if (oldStartIdx < that.startIdx) {\r\n                //         that.bufferHeight += rect.height\r\n\r\n                //     } else that.bufferHeight -= oldStartHeight\r\n\r\n                //     console.log('that.bufferHeight', that.bufferHeight, 'height', idx)\r\n                //     oldStartHeight = rect.height\r\n                //     oldStartIdx = that.startIdx\r\n\r\n\r\n                //     console.log(mutationList, observer, 'callback', rect)\r\n                // })\r\n                // obsver.observe(elWarpper, { subtree: true, childList: true })\r\n\r\n                this.itemHeight = elWarpper.querySelector('tr').offsetHeight\r\n                console.log(elWarpper.querySelector('tr').offsetHeight, 'clientHeight', elWarpperTable.clientHeight / 13)\r\n            })\r\n\r\n\r\n            // scroll-event\r\n            elWarpper.addEventListener('scroll', this.eventScroll.bind(this))\r\n\r\n        },\r\n        eventScroll(ev) {\r\n            const top = ev.target.scrollTop\r\n\r\n            this.startIdx = Math.floor(top / this.itemHeight)\r\n\r\n            const bufferTop = (this.startIdx - this.bufferIdx) * this.itemHeight\r\n            // const bufferTop = this.bufferHeight\r\n\r\n            const topTo = (top - top % this.itemHeight) - bufferTop\r\n            // console.log(bufferTop, 'buffTop',top)\r\n            // console.log(top % this.itemHeight)\r\n            this.elWarp.style.height = this.globalHeight - topTo + 'px'\r\n            this.elWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n\r\n            // left\r\n            if (this.leftWarp) {\r\n                this.leftWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.leftWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n            // right\r\n            if (this.rightWarp) {\r\n                this.rightWarp.style.height = this.globalHeight - topTo + 'px'\r\n                this.rightWarp.style.transform = `translate3d(0, ${topTo}px, 0)`\r\n            }\r\n\r\n\r\n            // this.bufferItemArr()\r\n        }\r\n    },\r\n    render(h) {\r\n        const attrs = this.$attrs\r\n        return (\r\n            <el-table data={this.vData} attrs={this.$attrs} ref={this.refCallBack} on={this.$listeners}  >\r\n                {\r\n                    this.columns.map(col => {\r\n                        return <eleColumn props={{ ...col, globalSlots: this.$slots }}   >\r\n                            {/* <template slot={col.slotName}><slot name={col.slotName}></slot></template> */}\r\n\r\n                        </eleColumn>\r\n                    })\r\n                }\r\n                <template slot='append'>\r\n                    {this.$slots['append']}\r\n                </template>\r\n            </el-table>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import eleTable from './table'\r\n\r\nexport default {\r\n    name: 'eleTableContainer',\r\n    components: {\r\n        eleTable\r\n    },\r\n    data() {\r\n        return {\r\n            loading: false,\r\n        }\r\n    },\r\n    methods: {\r\n        getAxios() {\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        sizeChange(size) {\r\n            this.pProps.pageSize = size\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        currentChange(page) {\r\n            // if (this.loading) return\r\n            this.pProps.currentPage = page\r\n            this.loading = true\r\n            this.getData()\r\n                .finally(() => {\r\n                    this.loading = false\r\n                })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAxios()\r\n    },\r\n    computed: {\r\n        tProps() {\r\n            return this.$attrs\r\n        },\r\n        pProps() {\r\n            return this.$attrs.pageOpt\r\n        },\r\n        getData() {\r\n            return this.$attrs.getData\r\n        },\r\n    },\r\n    render(h, context) {\r\n        return (\r\n            <div class='ele-table-container'>\r\n                <ele-table props={this.tProps} v-loading={this.loading}></ele-table>\r\n                <el-pagination\r\n                    props={this.pProps}\r\n                    on={\r\n                        {\r\n                            'size-change': this.sizeChange,\r\n                            'current-change': this.currentChange\r\n                        }\r\n                    }\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** functional */\r\n    // render(h, context) {\r\n    //     console.log(_loading, '1')\r\n    //     const pProps = context.props.pageOpt\r\n    //     const tProps = context.props\r\n    //     const getData = context.props.getData\r\n\r\n    //     if(!created) {\r\n    //         getAxios()\r\n    //         created = true\r\n    //     } \r\n\r\n    //     function getAxios() {\r\n    //         _loading = true\r\n    //         setTimeout(() => {\r\n    //             getData().finally(_loading = false)\r\n    //         })\r\n    //     }\r\n\r\n    //     function sizeChange(size) {\r\n    //         pProps.pageSize = size\r\n    //         console.log('sizeChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n\r\n    //     }\r\n\r\n    //     function currentChange(page) {\r\n    //         pProps.currentPage = page\r\n    //         console.log('currentChange')\r\n    //         // pProps.loading = true\r\n    //         getAxios()\r\n\r\n    //     }\r\n\r\n\r\n\r\n    //     return (\r\n    //         <div class='ele-table-container'>\r\n    //             <ele-table props={{ ...tProps }} v-loading={_loading}></ele-table>\r\n    //             <el-pagination\r\n    //                 props={{ ...pProps }}\r\n    //                 on={\r\n    //                     {\r\n    //                         'size-change': sizeChange,\r\n    //                         'current-change': currentChange\r\n    //                     }\r\n    //                 }\r\n    //             />\r\n    //         </div >\r\n    //     )\r\n    // },\r\n}"],"names":["_extends","Object","assign","bind","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","eleColumn","name","functional","components","render","context","props","globalSlots","defaultRender","prop","_mergeJSXProps2","children","map","col","_mergeJSXProps","_objectSpread","toggleRowStatus","statusArr","row","newVal","changed","index","included","addRow","push","removeRow","splice","console","log","getKeysMap","array","rowKey","arrayMap","forEach","getRowIdentity","Error","key","split","current","mounted","initSelection","methods","tableRef","that","_toggleAllSelection","states","data","selection","value","selectOnIndeterminate","isAllSelected","selectionChanged","selectable","table","$emit","slice","_updateAllSelected","selectedMap","isSelected","selectedCount","j","item","isRowSelectable","store","toggleAllSelection","updateAllSelected","mixins","warpperRef","elWarp","elItems","elWarpHeight","itemHeight","itemHeightArr","vCount","bufferCount","bufferHeight","startIdx","selections","btn","type","columns","watch","val","style","height","computed","vData","start","bufferIdx","end","globalHeight","initProxy","updated","_orgWrappedRowRender","wrappedRowRender","refCallBack","el","$children","vnode","option","$options","tbody","$el","querySelectorAll","$nextTick","appendWarp","bufferItemArr","node","elTable","document","createElement","className","elWarpper","querySelector","elWarpperTable","insertBefore","appendChild","elLeftWarpper","leftWarp","elLeftWarrperTable","elRightWarpper","rightWarp","elRightWarrperTable","setTimeout","offsetHeight","clientHeight","addEventListener","eventScroll","ev","top","target","scrollTop","Math","floor","bufferTop","topTo","transform","$attrs","$listeners","$slots","eleTable","loading","getAxios","getData","sizeChange","size","pProps","pageSize","currentChange","page","currentPage","tProps","pageOpt"],"mappings":"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"}